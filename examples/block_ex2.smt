; 
(set-info :status unknown)
(declare-fun a_2 () Int)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_2 () Bool)
(declare-fun u_2_3 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x388 (and (and (<= 0 a_0) (< a_0 1024)) (and (<= 0 a_1) (< a_1 1024)) (and (<= 0 a_2) (< a_2 1024)))))
 (let (($x389 (and (=> (= t_0 4) (= t_1 4)) (=> (= t_1 4) (= t_2 4)))))
 (let (($x210 (= 4 t_2)))
 (let (($x391 (or (= 0 t_2) (= 1 t_2) (= 2 t_2) (= 3 t_2) $x210)))
 (let (($x253 (and (= u_0_3 u_0_2) (= u_1_3 u_1_2) (= u_2_3 u_2_2))))
 (let (($x217 (=> u_2_3 (= x_2_3 x_2_2))))
 (let (($x361 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) $x217)))
 (let (($x258 (and (=> u_2_3 (= x_2_3 x_1_2)) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x231 (= x_1_3 x_0_2)))
 (let (($x263 (= x_0_3 x_0_2)))
 (let (($x218 (=> (= 3 t_2) (and u_0_2 (and (not u_2_2) (and $x263 (and $x231 $x258)))))))
 (let (($x256 (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x231) (and $x217 $x253))))))
 (let (($x250 (and (=> u_0_3 (= x_0_3 x_1_2)) (=> u_1_3 (= x_1_3 x_2_2)))))
 (let (($x251 (and $x250 (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false)))))
 (let (($x236 (and (and (=> u_1_3 $x231) (=> u_2_3 (= x_2_3 x_1_2))) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x229 (=> (= 0 t_2) (and (not u_2_2) (and (= x_0_3 a_2) $x236)))))
 (let (($x378 (and $x229 (=> (= 1 t_2) (and u_0_2 $x251)) (=> (= 2 t_2) $x256) $x218 (=> $x210 (and $x361 $x253)))))
 (let (($x146 (= 4 t_1)))
 (let (($x145 (= 3 t_1)))
 (let (($x144 (= 2 t_1)))
 (let (($x143 (= 1 t_1)))
 (let (($x142 (= 0 t_1)))
 (let (($x185 (and (= u_0_2 u_0_1) (= u_1_2 u_1_1) (= u_2_2 u_2_1))))
 (let (($x196 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) (=> u_2_2 (= x_2_2 x_2_1)))))
 (let (($x139 (and (=> u_2_2 (= x_2_2 x_1_1)) (and (= u_0_2 true) (= u_1_2 u_0_1) (= u_2_2 u_1_1)))))
 (let (($x158 (= x_1_2 x_0_1)))
 (let (($x188 (and u_0_1 (and (not u_2_1) (and (= x_0_2 x_0_1) (and $x158 $x139))))))
 (let (($x359 (and (and (= x_0_2 x_1_1) $x158) (and (=> u_2_2 (= x_2_2 x_2_1)) $x185))))
 (let (($x178 (and (=> u_0_2 (= x_0_2 x_1_1)) (=> u_1_2 (= x_1_2 x_2_1)))))
 (let (($x179 (and $x178 (and (= u_0_2 u_1_1) (= u_1_2 u_2_1) (= u_2_2 false)))))
 (let (($x164 (and (and (=> u_1_2 $x158) (=> u_2_2 (= x_2_2 x_1_1))) (and (= u_0_2 true) (= u_1_2 u_0_1) (= u_2_2 u_1_1)))))
 (let (($x376 (and (=> $x142 (and (not u_2_1) (and (= x_0_2 a_1) $x164))) (=> $x143 (and u_0_1 $x179)) (=> $x144 (and u_0_1 (and u_1_1 $x359))) (=> $x145 $x188) (=> $x146 (and $x196 $x185)))))
 (let (($x71 (= 4 t_0)))
 (let (($x70 (= 3 t_0)))
 (let (($x68 (= 2 t_0)))
 (let (($x66 (= 1 t_0)))
 (let (($x65 (= 0 t_0)))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) (=> u_2_1 (= x_2_1 x_2_0)))))
 (let (($x133 (and $x132 (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x122 (and (=> u_2_1 (= x_2_1 x_1_0)) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x127 (and u_0_0 (and (not u_2_0) (and (= x_0_1 x_0_0) (and $x84 $x122))))))
 (let (($x116 (and (=> u_2_1 (= x_2_1 x_2_0)) (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x121 (=> $x68 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) $x116))))))
 (let (($x106 (and (=> u_0_1 (= x_0_1 x_1_0)) (=> u_1_1 (= x_1_1 x_2_0)))))
 (let (($x107 (and $x106 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x91 (and (and (=> u_1_1 $x84) (=> u_2_1 (= x_2_1 x_1_0))) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x373 (and (=> $x65 (and (not u_2_0) (and (= x_0_1 a_0) $x91))) (=> $x66 (and u_0_0 $x107)) $x121 (=> $x70 $x127) (=> $x71 $x133))))
 (let (($x371 (and (and $x373 (or $x65 $x66 $x68 $x70 $x71)) (and $x376 (or $x142 $x143 $x144 $x145 $x146)) (and $x378 $x391))))
 (let (($x387 (and (and (= x_0_3 s_0) (= u_0_3 true)) (and (= x_1_3 s_0) (= u_1_3 true)) (= u_2_3 false))))
 (let (($x18 (and (and (= x_0_0 s_0) (= u_0_0 true)) (= u_1_0 false) (= u_2_0 false))))
 (and $x18 (and $x387 (and (= s_0 1024) (and $x371 (and $x389 $x388)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)