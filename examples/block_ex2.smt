; 
(set-info :status unknown)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_0_0 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_0_3 () Int)
(declare-fun a_2 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun a_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun a_0 () Int)
(declare-fun sk_x () Int)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(declare-fun u_2_3 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(assert
 (forall ((s_0 Int) )(let (($x156 (= u_2_2 false)))
 (let (($x277 (and (and (= x_0_2 s_0) (= u_0_2 true)) (and (= x_1_2 s_0) (= u_1_2 true)) $x156)))
 (let (($x12 (= u_2_0 false)))
 (let (($x10 (= u_1_0 false)))
 (let (($x38 (= t_2 4)))
 (let (($x33 (= t_1 4)))
 (let (($x39 (=> $x33 $x38)))
 (let (($x36 (=> (= t_0 4) $x33)))
 (let (($x209 (= 4 t_2)))
 (let (($x208 (= 3 t_2)))
 (let (($x207 (= 2 t_2)))
 (let (($x206 (= 1 t_2)))
 (let (($x205 (= 0 t_2)))
 (let (($x246 (= u_2_3 u_2_2)))
 (let (($x247 (= u_1_3 u_1_2)))
 (let (($x248 (= u_0_3 u_0_2)))
 (let (($x249 (and $x248 $x247 $x246)))
 (let (($x250 (= x_2_3 x_2_2)))
 (let (($x251 (=> u_2_3 $x250)))
 (let (($x268 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) $x251)))
 (let (($x270 (=> $x209 (and $x268 $x249))))
 (let (($x215 (= u_2_3 u_1_2)))
 (let (($x217 (= u_1_3 u_0_2)))
 (let (($x219 (= u_0_3 true)))
 (let (($x220 (and $x219 $x217 $x215)))
 (let (($x225 (= x_2_3 x_1_2)))
 (let (($x226 (=> u_2_3 $x225)))
 (let (($x222 (= x_1_3 x_0_2)))
 (let (($x260 (= x_0_3 x_0_2)))
 (let (($x231 (not u_2_2)))
 (let (($x264 (=> $x208 (and u_0_2 (and $x231 (and $x260 (and $x222 (and $x226 $x220))))))))
 (let (($x256 (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x222) (and $x251 $x249))))))
 (let (($x257 (=> $x207 $x256)))
 (let (($x237 (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false))))
 (let (($x241 (=> u_1_3 (= x_1_3 x_2_2))))
 (let (($x245 (=> $x206 (and u_0_2 (and (and (=> u_0_3 (= x_0_3 x_1_2)) $x241) $x237)))))
 (let (($x232 (and $x231 (and (= x_0_3 a_2) (and (and (=> u_1_3 $x222) $x226) $x220)))))
 (let (($x233 (=> $x205 $x232)))
 (let (($x131 (= 4 t_1)))
 (let (($x130 (= 3 t_1)))
 (let (($x129 (= 2 t_1)))
 (let (($x128 (= 1 t_1)))
 (let (($x127 (= 0 t_1)))
 (let (($x423 (or $x127 $x128 $x129 $x130 $x131)))
 (let (($x168 (= u_2_2 u_2_1)))
 (let (($x169 (= u_1_2 u_1_1)))
 (let (($x170 (= u_0_2 u_0_1)))
 (let (($x171 (and $x170 $x169 $x168)))
 (let (($x172 (= x_2_2 x_2_1)))
 (let (($x173 (=> u_2_2 $x172)))
 (let (($x188 (= x_1_2 x_1_1)))
 (let (($x189 (=> u_1_2 $x188)))
 (let (($x182 (= x_0_2 x_0_1)))
 (let (($x187 (=> u_0_2 $x182)))
 (let (($x190 (and $x187 $x189 $x173)))
 (let (($x191 (and $x190 $x171)))
 (let (($x192 (=> $x131 $x191)))
 (let (($x137 (= u_2_2 u_1_1)))
 (let (($x139 (= u_1_2 u_0_1)))
 (let (($x141 (= u_0_2 true)))
 (let (($x142 (and $x141 $x139 $x137)))
 (let (($x147 (= x_2_2 x_1_1)))
 (let (($x148 (=> u_2_2 $x147)))
 (let (($x180 (and $x148 $x142)))
 (let (($x144 (= x_1_2 x_0_1)))
 (let (($x181 (and $x144 $x180)))
 (let (($x183 (and $x182 $x181)))
 (let (($x153 (not u_2_1)))
 (let (($x184 (and $x153 $x183)))
 (let (($x185 (and u_0_1 $x184)))
 (let (($x186 (=> $x130 $x185)))
 (let (($x174 (and $x173 $x171)))
 (let (($x160 (= x_0_2 x_1_1)))
 (let (($x175 (and $x160 $x144)))
 (let (($x176 (and $x175 $x174)))
 (let (($x177 (and u_1_1 $x176)))
 (let (($x178 (and u_0_1 $x177)))
 (let (($x179 (=> $x129 $x178)))
 (let (($x157 (= u_1_2 u_2_1)))
 (let (($x158 (= u_0_2 u_1_1)))
 (let (($x159 (and $x158 $x157 $x156)))
 (let (($x162 (= x_1_2 x_2_1)))
 (let (($x163 (=> u_1_2 $x162)))
 (let (($x161 (=> u_0_2 $x160)))
 (let (($x164 (and $x161 $x163)))
 (let (($x165 (and $x164 $x159)))
 (let (($x166 (and u_0_1 $x165)))
 (let (($x167 (=> $x128 $x166)))
 (let (($x154 (and $x153 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x144) $x148) $x142)))))
 (let (($x155 (=> $x127 $x154)))
 (let (($x29 (and $x155 $x167 $x179 $x186 $x192)))
 (let (($x16 (and $x29 $x423)))
 (let (($x51 (= 4 t_0)))
 (let (($x50 (= 3 t_0)))
 (let (($x48 (= 2 t_0)))
 (let (($x46 (= 1 t_0)))
 (let (($x45 (= 0 t_0)))
 (let (($x91 (= u_2_1 u_2_0)))
 (let (($x92 (= u_1_1 u_1_0)))
 (let (($x93 (= u_0_1 u_0_0)))
 (let (($x94 (and $x93 $x92 $x91)))
 (let (($x95 (= x_2_1 x_2_0)))
 (let (($x96 (=> u_2_1 $x95)))
 (let (($x113 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x96)))
 (let (($x115 (=> $x51 (and $x113 $x94))))
 (let (($x58 (= u_2_1 u_1_0)))
 (let (($x60 (= u_1_1 u_0_0)))
 (let (($x62 (= u_0_1 true)))
 (let (($x63 (and $x62 $x60 $x58)))
 (let (($x69 (= x_2_1 x_1_0)))
 (let (($x70 (=> u_2_1 $x69)))
 (let (($x65 (= x_1_1 x_0_0)))
 (let (($x105 (= x_0_1 x_0_0)))
 (let (($x75 (not u_2_0)))
 (let (($x109 (=> $x50 (and u_0_0 (and $x75 (and $x105 (and $x65 (and $x70 $x63))))))))
 (let (($x101 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x65) (and $x96 $x94))))))
 (let (($x102 (=> $x48 $x101)))
 (let (($x78 (= u_2_1 false)))
 (let (($x81 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) $x78)))
 (let (($x86 (=> u_1_1 (= x_1_1 x_2_0))))
 (let (($x90 (=> $x46 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x86) $x81)))))
 (let (($x76 (and $x75 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x65) $x70) $x63)))))
 (let (($x77 (=> $x45 $x76)))
 (let (($x422 (and (and $x77 $x90 $x102 $x109 $x115) (or $x45 $x46 $x48 $x50 $x51))))
 (let (($x201 (and $x422 $x16 (and (and $x233 $x245 $x257 $x264 $x270) (or $x205 $x206 $x207 $x208 $x209)))))
 (let (($x202 (and $x201 (and $x36 $x39))))
 (let (($x280 (and (= s_0 sk_x) (and $x202 (and (and (= x_0_0 s_0) (= u_0_0 true)) $x10 $x12)))))
 (=> $x280 $x277)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
(get-model)