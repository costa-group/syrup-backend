; 
(set-info :status unknown)
(declare-fun a_3 () Int)
(declare-fun a_2 () Int)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_3 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun s_1 () Int)
(declare-fun x_0_4 () Int)
(declare-fun s_0 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_2_4 () Int)
(declare-fun x_1_4 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun x_2_0 () Int)
(declare-fun u_2_3 () Bool)
(declare-fun u_2_4 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_1_4 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_0_4 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x50 (and (and (<= 0 a_0) (< a_0 1024)) (and (<= 0 a_1) (< a_1 1024)) (and (<= 0 a_2) (< a_2 1024)) (and (<= 0 a_3) (< a_3 1024)))))
 (let (($x63 (and (=> (= t_0 4) (= t_1 4)) (=> (= t_1 4) (= t_2 4)) (=> (= t_2 4) (= t_3 4)))))
 (let (($x294 (= 5 t_3)))
 (let (($x293 (= 4 t_3)))
 (let (($x292 (= 3 t_3)))
 (let (($x291 (= 2 t_3)))
 (let (($x290 (= 1 t_3)))
 (let (($x289 (= 0 t_3)))
 (let (($x352 (=> $x294 (and (and (= x_0_3 1) (= x_1_3 s_0)) (= x_0_4 s_1)))))
 (let (($x322 (= u_2_4 u_2_3)))
 (let (($x323 (= u_1_4 u_1_3)))
 (let (($x324 (= u_0_4 u_0_3)))
 (let (($x325 (and $x324 $x323 $x322)))
 (let (($x326 (= x_2_4 x_2_3)))
 (let (($x327 (=> u_2_4 $x326)))
 (let (($x344 (and (=> u_0_4 (= x_0_4 x_0_3)) (=> u_1_4 (= x_1_4 x_1_3)) $x327)))
 (let (($x296 (= u_2_4 u_1_3)))
 (let (($x297 (= u_1_4 u_0_3)))
 (let (($x22 (= u_0_4 true)))
 (let (($x298 (and $x22 $x297 $x296)))
 (let (($x302 (= x_2_4 x_1_3)))
 (let (($x303 (=> u_2_4 $x302)))
 (let (($x299 (= x_1_4 x_0_3)))
 (let (($x336 (= x_0_4 x_0_3)))
 (let (($x308 (not u_2_3)))
 (let (($x340 (=> $x292 (and u_0_3 (and $x308 (and $x336 (and $x299 (and $x303 $x298))))))))
 (let (($x332 (and u_0_3 (and u_1_3 (and (and (= x_0_4 x_1_3) $x299) (and $x327 $x325))))))
 (let (($x318 (and (=> u_0_4 (= x_0_4 x_1_3)) (=> u_1_4 (= x_1_4 x_2_3)))))
 (let (($x319 (and $x318 (and (= u_0_4 u_1_3) (= u_1_4 u_2_3) (= u_2_4 false)))))
 (let (($x309 (and $x308 (and (= x_0_4 a_3) (and (and (=> u_1_4 $x299) $x303) $x298)))))
 (let (($x353 (and (=> $x289 $x309) (=> $x290 (and u_0_3 $x319)) (=> $x291 $x332) $x340 (=> $x293 (and $x344 $x325)) $x352)))
 (let (($x221 (= 5 t_2)))
 (let (($x220 (= 4 t_2)))
 (let (($x219 (= 3 t_2)))
 (let (($x218 (= 2 t_2)))
 (let (($x217 (= 1 t_2)))
 (let (($x216 (= 0 t_2)))
 (let (($x286 (=> $x221 (and (and (= x_0_2 1) (= x_1_2 s_0)) (= x_0_3 s_1)))))
 (let (($x256 (= u_2_3 u_2_2)))
 (let (($x257 (= u_1_3 u_1_2)))
 (let (($x258 (= u_0_3 u_0_2)))
 (let (($x259 (and $x258 $x257 $x256)))
 (let (($x260 (= x_2_3 x_2_2)))
 (let (($x261 (=> u_2_3 $x260)))
 (let (($x278 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) $x261)))
 (let (($x225 (= u_2_3 u_1_2)))
 (let (($x227 (= u_1_3 u_0_2)))
 (let (($x229 (= u_0_3 true)))
 (let (($x230 (and $x229 $x227 $x225)))
 (let (($x235 (= x_2_3 x_1_2)))
 (let (($x236 (=> u_2_3 $x235)))
 (let (($x232 (= x_1_3 x_0_2)))
 (let (($x270 (= x_0_3 x_0_2)))
 (let (($x241 (not u_2_2)))
 (let (($x274 (=> $x219 (and u_0_2 (and $x241 (and $x270 (and $x232 (and $x236 $x230))))))))
 (let (($x266 (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x232) (and $x261 $x259))))))
 (let (($x252 (and (=> u_0_3 (= x_0_3 x_1_2)) (=> u_1_3 (= x_1_3 x_2_2)))))
 (let (($x253 (and $x252 (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false)))))
 (let (($x242 (and $x241 (and (= x_0_3 a_2) (and (and (=> u_1_3 $x232) $x236) $x230)))))
 (let (($x287 (and (=> $x216 $x242) (=> $x217 (and u_0_2 $x253)) (=> $x218 $x266) $x274 (=> $x220 (and $x278 $x259)) $x286)))
 (let (($x148 (= 5 t_1)))
 (let (($x147 (= 4 t_1)))
 (let (($x146 (= 3 t_1)))
 (let (($x145 (= 2 t_1)))
 (let (($x144 (= 1 t_1)))
 (let (($x143 (= 0 t_1)))
 (let (($x213 (=> $x148 (and (and (= x_0_1 1) (= x_1_1 s_0)) (= x_0_2 s_1)))))
 (let (($x183 (= u_2_2 u_2_1)))
 (let (($x184 (= u_1_2 u_1_1)))
 (let (($x185 (= u_0_2 u_0_1)))
 (let (($x186 (and $x185 $x184 $x183)))
 (let (($x187 (= x_2_2 x_2_1)))
 (let (($x188 (=> u_2_2 $x187)))
 (let (($x205 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) $x188)))
 (let (($x152 (= u_2_2 u_1_1)))
 (let (($x154 (= u_1_2 u_0_1)))
 (let (($x156 (= u_0_2 true)))
 (let (($x157 (and $x156 $x154 $x152)))
 (let (($x162 (= x_2_2 x_1_1)))
 (let (($x163 (=> u_2_2 $x162)))
 (let (($x159 (= x_1_2 x_0_1)))
 (let (($x197 (= x_0_2 x_0_1)))
 (let (($x168 (not u_2_1)))
 (let (($x201 (=> $x146 (and u_0_1 (and $x168 (and $x197 (and $x159 (and $x163 $x157))))))))
 (let (($x193 (and u_0_1 (and u_1_1 (and (and (= x_0_2 x_1_1) $x159) (and $x188 $x186))))))
 (let (($x179 (and (=> u_0_2 (= x_0_2 x_1_1)) (=> u_1_2 (= x_1_2 x_2_1)))))
 (let (($x180 (and $x179 (and (= u_0_2 u_1_1) (= u_1_2 u_2_1) (= u_2_2 false)))))
 (let (($x169 (and $x168 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x159) $x163) $x157)))))
 (let (($x214 (and (=> $x143 $x169) (=> $x144 (and u_0_1 $x180)) (=> $x145 $x193) $x201 (=> $x147 (and $x205 $x186)) $x213)))
 (let (($x73 (= 5 t_0)))
 (let (($x71 (= 4 t_0)))
 (let (($x70 (= 3 t_0)))
 (let (($x68 (= 2 t_0)))
 (let (($x66 (= 1 t_0)))
 (let (($x65 (= 0 t_0)))
 (let (($x140 (=> $x73 (and (and (= x_0_0 1) (= x_1_0 s_0)) (= x_0_1 s_1)))))
 (let (($x110 (= u_2_1 u_2_0)))
 (let (($x111 (= u_1_1 u_1_0)))
 (let (($x112 (= u_0_1 u_0_0)))
 (let (($x113 (and $x112 $x111 $x110)))
 (let (($x114 (= x_2_1 x_2_0)))
 (let (($x115 (=> u_2_1 $x114)))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x115)))
 (let (($x77 (= u_2_1 u_1_0)))
 (let (($x79 (= u_1_1 u_0_0)))
 (let (($x81 (= u_0_1 true)))
 (let (($x82 (and $x81 $x79 $x77)))
 (let (($x88 (= x_2_1 x_1_0)))
 (let (($x89 (=> u_2_1 $x88)))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x124 (= x_0_1 x_0_0)))
 (let (($x94 (not u_2_0)))
 (let (($x128 (=> $x70 (and u_0_0 (and $x94 (and $x124 (and $x84 (and $x89 $x82))))))))
 (let (($x120 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) (and $x115 $x113))))))
 (let (($x106 (and (=> u_0_1 (= x_0_1 x_1_0)) (=> u_1_1 (= x_1_1 x_2_0)))))
 (let (($x107 (and $x106 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x95 (and $x94 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x84) $x89) $x82)))))
 (let (($x141 (and (=> $x65 $x95) (=> $x66 (and u_0_0 $x107)) (=> $x68 $x120) $x128 (=> $x71 (and $x132 $x113)) $x140)))
 (let (($x355 (and (and $x141 (or $x65 $x66 $x68 $x70 $x71 $x73)) (and $x214 (or $x143 $x144 $x145 $x146 $x147 $x148)) (and $x287 (or $x216 $x217 $x218 $x219 $x220 $x221)) (and $x353 (or $x289 $x290 $x291 $x292 $x293 $x294)))))
 (let (($x361 (and (and (= s_0 1024) (= s_1 1025)) (and $x355 (and $x63 $x50)))))
 (let (($x20 (= u_2_4 false)))
 (let (($x31 (and (and (= x_0_4 146) $x22) (and (= x_1_4 s_1) (= u_1_4 true)) $x20)))
 (let (($x18 (and (and (= x_0_0 s_0) (= u_0_0 true)) (= u_1_0 false) (= u_2_0 false))))
 (and $x18 (and $x31 $x361))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)