; 
(set-info :status unknown)
(declare-fun a_3 () Int)
(declare-fun a_2 () Int)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_3 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_1_4 () Int)
(declare-fun s_1 () Int)
(declare-fun x_0_4 () Int)
(declare-fun s_0 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_2_4 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun u_2_4 () Bool)
(declare-fun u_2_3 () Bool)
(declare-fun u_1_4 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_0_4 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x50 (and (and (<= 0 a_0) (< a_0 1024)) (and (<= 0 a_1) (< a_1 1024)) (and (<= 0 a_2) (< a_2 1024)) (and (<= 0 a_3) (< a_3 1024)))))
 (let (($x63 (and (=> (= t_0 4) (= t_1 4)) (=> (= t_1 4) (= t_2 4)) (=> (= t_2 4) (= t_3 4)))))
 (let (($x317 (= 5 t_3)))
 (let (($x319 (= 4 t_3)))
 (let (($x300 (= 3 t_3)))
 (let (($x299 (= 2 t_3)))
 (let (($x229 (= 1 t_3)))
 (let (($x298 (= 0 t_3)))
 (let (($x20 (= u_2_4 false)))
 (let (($x327 (= u_1_4 u_2_3)))
 (let (($x328 (= u_0_4 u_1_3)))
 (let (($x329 (and $x328 $x327 $x20)))
 (let (($x324 (= x_1_4 x_2_3)))
 (let (($x330 (=> u_1_4 $x324)))
 (let (($x363 (and (and (and (= x_0_3 1) (= x_1_3 s_0)) (= x_0_4 s_1)) (and $x330 $x329))))
 (let (($x337 (= u_2_4 u_2_3)))
 (let (($x338 (= u_1_4 u_1_3)))
 (let (($x335 (= u_0_4 u_0_3)))
 (let (($x334 (and $x335 $x338 $x337)))
 (let (($x333 (= x_2_4 x_2_3)))
 (let (($x336 (=> u_2_4 $x333)))
 (let (($x354 (and (=> u_0_4 (= x_0_4 x_0_3)) (=> u_1_4 (= x_1_4 x_1_3)) $x336)))
 (let (($x311 (= u_2_4 u_1_3)))
 (let (($x312 (= u_1_4 u_0_3)))
 (let (($x22 (= u_0_4 true)))
 (let (($x313 (and $x22 $x312 $x311)))
 (let (($x307 (= x_2_4 x_1_3)))
 (let (($x309 (=> u_2_4 $x307)))
 (let (($x314 (= x_1_4 x_0_3)))
 (let (($x346 (= x_0_4 x_0_3)))
 (let (($x301 (not u_2_3)))
 (let (($x351 (=> $x300 (and u_0_3 (and $x301 (and $x346 (and $x314 (and $x309 $x313))))))))
 (let (($x344 (and u_0_3 (and u_1_3 (and (and (= x_0_4 x_1_3) $x314) (and $x336 $x334))))))
 (let (($x340 (=> $x229 (and u_0_3 (and (and (=> u_0_4 (= x_0_4 x_1_3)) $x330) $x329)))))
 (let (($x325 (and $x301 (and (= x_0_4 a_3) (and (and (=> u_1_4 $x314) $x309) $x313)))))
 (let (($x366 (and (=> $x298 $x325) $x340 (=> $x299 $x344) $x351 (=> $x319 (and $x354 $x334)) (=> $x317 (and u_0_3 (and u_1_3 $x363))))))
 (let (($x230 (= 5 t_2)))
 (let (($x248 (= 4 t_2)))
 (let (($x223 (= 3 t_2)))
 (let (($x222 (= 2 t_2)))
 (let (($x152 (= 1 t_2)))
 (let (($x221 (= 0 t_2)))
 (let (($x257 (= u_2_3 false)))
 (let (($x258 (= u_1_3 u_2_2)))
 (let (($x259 (= u_0_3 u_1_2)))
 (let (($x253 (and $x259 $x258 $x257)))
 (let (($x254 (= x_1_3 x_2_2)))
 (let (($x260 (=> u_1_3 $x254)))
 (let (($x293 (and (and (and (= x_0_2 1) (= x_1_2 s_0)) (= x_0_3 s_1)) (and $x260 $x253))))
 (let (($x267 (= u_2_3 u_2_2)))
 (let (($x268 (= u_1_3 u_1_2)))
 (let (($x265 (= u_0_3 u_0_2)))
 (let (($x264 (and $x265 $x268 $x267)))
 (let (($x263 (= x_2_3 x_2_2)))
 (let (($x266 (=> u_2_3 $x263)))
 (let (($x284 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) $x266)))
 (let (($x239 (= u_2_3 u_1_2)))
 (let (($x231 (= u_1_3 u_0_2)))
 (let (($x242 (= u_0_3 true)))
 (let (($x243 (and $x242 $x231 $x239)))
 (let (($x232 (= x_2_3 x_1_2)))
 (let (($x237 (=> u_2_3 $x232)))
 (let (($x235 (= x_1_3 x_0_2)))
 (let (($x276 (= x_0_3 x_0_2)))
 (let (($x224 (not u_2_2)))
 (let (($x281 (=> $x223 (and u_0_2 (and $x224 (and $x276 (and $x235 (and $x237 $x243))))))))
 (let (($x274 (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x235) (and $x266 $x264))))))
 (let (($x270 (=> $x152 (and u_0_2 (and (and (=> u_0_3 (= x_0_3 x_1_2)) $x260) $x253)))))
 (let (($x255 (and $x224 (and (= x_0_3 a_2) (and (and (=> u_1_3 $x235) $x237) $x243)))))
 (let (($x296 (and (=> $x221 $x255) $x270 (=> $x222 $x274) $x281 (=> $x248 (and $x284 $x264)) (=> $x230 (and u_0_2 (and u_1_2 $x293))))))
 (let (($x153 (= 5 t_1)))
 (let (($x171 (= 4 t_1)))
 (let (($x146 (= 3 t_1)))
 (let (($x145 (= 2 t_1)))
 (let (($x144 (= 1 t_1)))
 (let (($x143 (= 0 t_1)))
 (let (($x180 (= u_2_2 false)))
 (let (($x181 (= u_1_2 u_2_1)))
 (let (($x182 (= u_0_2 u_1_1)))
 (let (($x176 (and $x182 $x181 $x180)))
 (let (($x177 (= x_1_2 x_2_1)))
 (let (($x183 (=> u_1_2 $x177)))
 (let (($x216 (and (and (and (= x_0_1 1) (= x_1_1 s_0)) (= x_0_2 s_1)) (and $x183 $x176))))
 (let (($x190 (= u_2_2 u_2_1)))
 (let (($x191 (= u_1_2 u_1_1)))
 (let (($x188 (= u_0_2 u_0_1)))
 (let (($x187 (and $x188 $x191 $x190)))
 (let (($x186 (= x_2_2 x_2_1)))
 (let (($x189 (=> u_2_2 $x186)))
 (let (($x207 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) $x189)))
 (let (($x162 (= u_2_2 u_1_1)))
 (let (($x154 (= u_1_2 u_0_1)))
 (let (($x165 (= u_0_2 true)))
 (let (($x166 (and $x165 $x154 $x162)))
 (let (($x155 (= x_2_2 x_1_1)))
 (let (($x160 (=> u_2_2 $x155)))
 (let (($x158 (= x_1_2 x_0_1)))
 (let (($x199 (= x_0_2 x_0_1)))
 (let (($x147 (not u_2_1)))
 (let (($x204 (=> $x146 (and u_0_1 (and $x147 (and $x199 (and $x158 (and $x160 $x166))))))))
 (let (($x197 (and u_0_1 (and u_1_1 (and (and (= x_0_2 x_1_1) $x158) (and $x189 $x187))))))
 (let (($x193 (=> $x144 (and u_0_1 (and (and (=> u_0_2 (= x_0_2 x_1_1)) $x183) $x176)))))
 (let (($x178 (and $x147 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x158) $x160) $x166)))))
 (let (($x219 (and (=> $x143 $x178) $x193 (=> $x145 $x197) $x204 (=> $x171 (and $x207 $x187)) (=> $x153 (and u_0_1 (and u_1_1 $x216))))))
 (let (($x73 (= 5 t_0)))
 (let (($x74 (or (= 0 t_0) (= 1 t_0) (= 2 t_0) (= 3 t_0) (= 4 t_0) $x73)))
 (let (($x100 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false))))
 (let (($x105 (=> u_1_1 (= x_1_1 x_2_0))))
 (let (($x136 (and (and (and (= x_0_0 1) (= x_1_0 s_0)) (= x_0_1 s_1)) (and $x105 $x100))))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) (=> u_2_1 (= x_2_1 x_2_0)))))
 (let (($x133 (and $x132 (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x122 (and (=> u_2_1 (= x_2_1 x_1_0)) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x127 (and u_0_0 (and (not u_2_0) (and (= x_0_1 x_0_0) (and $x84 $x122))))))
 (let (($x116 (and (=> u_2_1 (= x_2_1 x_2_0)) (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x121 (=> (= 2 t_0) (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) $x116))))))
 (let (($x109 (=> (= 1 t_0) (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x105) $x100)))))
 (let (($x91 (and (and (=> u_1_1 $x84) (=> u_2_1 (= x_2_1 x_1_0))) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x96 (=> (= 0 t_0) (and (not u_2_0) (and (= x_0_1 a_0) $x91)))))
 (let (($x141 (and $x96 $x109 $x121 (=> (= 3 t_0) $x127) (=> (= 4 t_0) $x133) (=> $x73 (and u_0_0 (and u_1_0 $x136))))))
 (let (($x368 (and (and $x141 $x74) (and $x219 (or $x143 $x144 $x145 $x146 $x171 $x153)) (and $x296 (or $x221 $x152 $x222 $x223 $x248 $x230)) (and $x366 (or $x298 $x229 $x299 $x300 $x319 $x317)))))
 (let (($x377 (and (and (= s_1 1024) (= s_0 1025)) (and $x368 (and $x63 $x50)))))
 (let (($x31 (and (and (= x_0_4 146) $x22) (and (= x_1_4 s_1) (= u_1_4 true)) $x20)))
 (let (($x18 (and (and (= x_0_0 s_0) (= u_0_0 true)) (= u_1_0 false) (= u_2_0 false))))
 (and $x18 (and $x31 $x377)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)