; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x43 (and (<= 0 a_1) (< a_1 1024))))
 (let (($x39 (and (<= 0 a_0) (< a_0 1024))))
 (let (($x55 (= t_1 1028)))
 (let (($x58 (=> (= t_0 1028) $x55)))
 (let (($x153 (= 1028 t_1)))
 (let (($x152 (= 1027 t_1)))
 (let (($x151 (= 1026 t_1)))
 (let (($x150 (= 1025 t_1)))
 (let (($x149 (= 1024 t_1)))
 (let (($x388 (or $x149 $x150 $x151 $x152 $x153)))
 (let (($x189 (= u_2_2 u_2_1)))
 (let (($x190 (= u_1_2 u_1_1)))
 (let (($x191 (= u_0_2 u_0_1)))
 (let (($x192 (and $x191 $x190 $x189)))
 (let (($x193 (= x_2_2 x_2_1)))
 (let (($x194 (=> u_2_2 $x193)))
 (let (($x209 (= x_1_2 x_1_1)))
 (let (($x210 (=> u_1_2 $x209)))
 (let (($x203 (= x_0_2 x_0_1)))
 (let (($x208 (=> u_0_2 $x203)))
 (let (($x211 (and $x208 $x210 $x194)))
 (let (($x212 (and $x211 $x192)))
 (let (($x213 (=> $x153 $x212)))
 (let (($x158 (= u_2_2 u_1_1)))
 (let (($x160 (= u_1_2 u_0_1)))
 (let (($x162 (= u_0_2 true)))
 (let (($x163 (and $x162 $x160 $x158)))
 (let (($x168 (= x_2_2 x_1_1)))
 (let (($x169 (=> u_2_2 $x168)))
 (let (($x201 (and $x169 $x163)))
 (let (($x165 (= x_1_2 x_0_1)))
 (let (($x202 (and $x165 $x201)))
 (let (($x204 (and $x203 $x202)))
 (let (($x174 (not u_2_1)))
 (let (($x205 (and $x174 $x204)))
 (let (($x206 (and u_0_1 $x205)))
 (let (($x207 (=> $x152 $x206)))
 (let (($x195 (and $x194 $x192)))
 (let (($x181 (= x_0_2 x_1_1)))
 (let (($x196 (and $x181 $x165)))
 (let (($x197 (and $x196 $x195)))
 (let (($x198 (and u_1_1 $x197)))
 (let (($x199 (and u_0_1 $x198)))
 (let (($x200 (=> $x151 $x199)))
 (let (($x177 (= u_2_2 false)))
 (let (($x178 (= u_1_2 u_2_1)))
 (let (($x179 (= u_0_2 u_1_1)))
 (let (($x180 (and $x179 $x178 $x177)))
 (let (($x183 (= x_1_2 x_2_1)))
 (let (($x184 (=> u_1_2 $x183)))
 (let (($x182 (=> u_0_2 $x181)))
 (let (($x185 (and $x182 $x184)))
 (let (($x186 (and $x185 $x180)))
 (let (($x187 (and u_0_1 $x186)))
 (let (($x188 (=> $x150 $x187)))
 (let (($x166 (=> u_1_2 $x165)))
 (let (($x170 (and $x166 $x169)))
 (let (($x171 (and $x170 $x163)))
 (let (($x172 (= x_0_2 a_1)))
 (let (($x173 (and $x172 $x171)))
 (let (($x175 (and $x174 $x173)))
 (let (($x176 (=> $x149 $x175)))
 (let (($x389 (and $x176 $x188 $x200 $x207 $x213)))
 (let (($x390 (and $x389 $x388)))
 (let (($x74 (= 1028 t_0)))
 (let (($x73 (= 1027 t_0)))
 (let (($x71 (= 1026 t_0)))
 (let (($x69 (= 1025 t_0)))
 (let (($x67 (= 1024 t_0)))
 (let (($x113 (= u_2_1 u_2_0)))
 (let (($x114 (= u_1_1 u_1_0)))
 (let (($x115 (= u_0_1 u_0_0)))
 (let (($x116 (and $x115 $x114 $x113)))
 (let (($x117 (= x_2_1 x_2_0)))
 (let (($x118 (=> u_2_1 $x117)))
 (let (($x135 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x118)))
 (let (($x137 (=> $x74 (and $x135 $x116))))
 (let (($x80 (= u_2_1 u_1_0)))
 (let (($x82 (= u_1_1 u_0_0)))
 (let (($x84 (= u_0_1 true)))
 (let (($x85 (and $x84 $x82 $x80)))
 (let (($x91 (= x_2_1 x_1_0)))
 (let (($x92 (=> u_2_1 $x91)))
 (let (($x87 (= x_1_1 x_0_0)))
 (let (($x127 (= x_0_1 x_0_0)))
 (let (($x97 (not u_2_0)))
 (let (($x131 (=> $x73 (and u_0_0 (and $x97 (and $x127 (and $x87 (and $x92 $x85))))))))
 (let (($x123 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x87) (and $x118 $x116))))))
 (let (($x124 (=> $x71 $x123)))
 (let (($x100 (= u_2_1 false)))
 (let (($x103 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) $x100)))
 (let (($x108 (=> u_1_1 (= x_1_1 x_2_0))))
 (let (($x112 (=> $x69 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x108) $x103)))))
 (let (($x98 (and $x97 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x87) $x92) $x85)))))
 (let (($x99 (=> $x67 $x98)))
 (let (($x387 (and (and $x99 $x112 $x124 $x131 $x137) (or $x67 $x69 $x71 $x73 $x74))))
 (let (($x33 (= s_0 146)))
 (let (($x394 (and (and (and (= x_0_1 s_0) $x84) (= u_1_1 false) $x100) (and $x33 (and (and $x387 $x390) (and $x58 (and $x39 $x43)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x394))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)