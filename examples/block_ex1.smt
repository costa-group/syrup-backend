; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x40 (and (<= 0 a_1) (< a_1 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
 (let (($x36 (and (<= 0 a_0) (< a_0 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
 (let (($x52 (= t_1 4)))
 (let (($x55 (=> (= t_0 4) $x52)))
 (let (($x149 (= 4 t_1)))
 (let (($x148 (= 3 t_1)))
 (let (($x147 (= 2 t_1)))
 (let (($x146 (= 1 t_1)))
 (let (($x145 (= 0 t_1)))
 (let (($x440 (or $x145 $x146 $x147 $x148 $x149)))
 (let (($x185 (= u_2_2 u_2_1)))
 (let (($x186 (= u_1_2 u_1_1)))
 (let (($x187 (= u_0_2 u_0_1)))
 (let (($x188 (and $x187 $x186 $x185)))
 (let (($x189 (= x_2_2 x_2_1)))
 (let (($x190 (=> u_2_2 $x189)))
 (let (($x205 (= x_1_2 x_1_1)))
 (let (($x206 (=> u_1_2 $x205)))
 (let (($x199 (= x_0_2 x_0_1)))
 (let (($x204 (=> u_0_2 $x199)))
 (let (($x207 (and $x204 $x206 $x190)))
 (let (($x208 (and $x207 $x188)))
 (let (($x209 (=> $x149 $x208)))
 (let (($x154 (= u_2_2 u_1_1)))
 (let (($x156 (= u_1_2 u_0_1)))
 (let (($x158 (= u_0_2 true)))
 (let (($x159 (and $x158 $x156 $x154)))
 (let (($x164 (= x_2_2 x_1_1)))
 (let (($x165 (=> u_2_2 $x164)))
 (let (($x197 (and $x165 $x159)))
 (let (($x161 (= x_1_2 x_0_1)))
 (let (($x198 (and $x161 $x197)))
 (let (($x200 (and $x199 $x198)))
 (let (($x170 (not u_2_1)))
 (let (($x201 (and $x170 $x200)))
 (let (($x202 (and u_0_1 $x201)))
 (let (($x203 (=> $x148 $x202)))
 (let (($x191 (and $x190 $x188)))
 (let (($x177 (= x_0_2 x_1_1)))
 (let (($x192 (and $x177 $x161)))
 (let (($x193 (and $x192 $x191)))
 (let (($x194 (and u_1_1 $x193)))
 (let (($x195 (and u_0_1 $x194)))
 (let (($x196 (=> $x147 $x195)))
 (let (($x173 (= u_2_2 false)))
 (let (($x174 (= u_1_2 u_2_1)))
 (let (($x175 (= u_0_2 u_1_1)))
 (let (($x176 (and $x175 $x174 $x173)))
 (let (($x179 (= x_1_2 x_2_1)))
 (let (($x180 (=> u_1_2 $x179)))
 (let (($x178 (=> u_0_2 $x177)))
 (let (($x181 (and $x178 $x180)))
 (let (($x182 (and $x181 $x176)))
 (let (($x183 (and u_0_1 $x182)))
 (let (($x184 (=> $x146 $x183)))
 (let (($x162 (=> u_1_2 $x161)))
 (let (($x166 (and $x162 $x165)))
 (let (($x167 (and $x166 $x159)))
 (let (($x168 (= x_0_2 a_1)))
 (let (($x169 (and $x168 $x167)))
 (let (($x171 (and $x170 $x169)))
 (let (($x172 (=> $x145 $x171)))
 (let (($x29 (and $x172 $x184 $x196 $x203 $x209)))
 (let (($x16 (and $x29 $x440)))
 (let (($x70 (= 4 t_0)))
 (let (($x69 (= 3 t_0)))
 (let (($x67 (= 2 t_0)))
 (let (($x65 (= 1 t_0)))
 (let (($x64 (= 0 t_0)))
 (let (($x109 (= u_2_1 u_2_0)))
 (let (($x110 (= u_1_1 u_1_0)))
 (let (($x111 (= u_0_1 u_0_0)))
 (let (($x112 (and $x111 $x110 $x109)))
 (let (($x113 (= x_2_1 x_2_0)))
 (let (($x114 (=> u_2_1 $x113)))
 (let (($x131 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x114)))
 (let (($x133 (=> $x70 (and $x131 $x112))))
 (let (($x76 (= u_2_1 u_1_0)))
 (let (($x78 (= u_1_1 u_0_0)))
 (let (($x80 (= u_0_1 true)))
 (let (($x81 (and $x80 $x78 $x76)))
 (let (($x87 (= x_2_1 x_1_0)))
 (let (($x88 (=> u_2_1 $x87)))
 (let (($x83 (= x_1_1 x_0_0)))
 (let (($x123 (= x_0_1 x_0_0)))
 (let (($x93 (not u_2_0)))
 (let (($x127 (=> $x69 (and u_0_0 (and $x93 (and $x123 (and $x83 (and $x88 $x81))))))))
 (let (($x119 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x83) (and $x114 $x112))))))
 (let (($x120 (=> $x67 $x119)))
 (let (($x96 (= u_2_1 false)))
 (let (($x99 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) $x96)))
 (let (($x104 (=> u_1_1 (= x_1_1 x_2_0))))
 (let (($x108 (=> $x65 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x104) $x99)))))
 (let (($x94 (and $x93 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x83) $x88) $x81)))))
 (let (($x95 (=> $x64 $x94)))
 (let (($x439 (and (and $x95 $x108 $x120 $x127 $x133) (or $x64 $x65 $x67 $x69 $x70))))
 (let (($x26 (= s_0 146)))
 (let (($x375 (and (and (and (= x_0_1 s_0) $x80) (= u_1_1 false) $x96) (and $x26 (and (and $x439 $x16) (and $x55 (and $x36 $x40)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x375))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)