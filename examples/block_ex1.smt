; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x41 (and (<= 0 a_1) (< a_1 1024))))
 (let (($x37 (and (<= 0 a_0) (< a_0 1024))))
 (let (($x53 (= t_1 4)))
 (let (($x56 (=> (= t_0 4) $x53)))
 (let (($x146 (= 4 t_1)))
 (let (($x145 (= 3 t_1)))
 (let (($x144 (= 2 t_1)))
 (let (($x143 (= 1 t_1)))
 (let (($x142 (= 0 t_1)))
 (let (($x182 (= u_2_2 u_2_1)))
 (let (($x183 (= u_1_2 u_1_1)))
 (let (($x184 (= u_0_2 u_0_1)))
 (let (($x185 (and $x184 $x183 $x182)))
 (let (($x186 (= x_2_2 x_2_1)))
 (let (($x356 (=> u_2_2 $x186)))
 (let (($x192 (= x_1_2 x_1_1)))
 (let (($x193 (=> u_1_2 $x192)))
 (let (($x141 (= x_0_2 x_0_1)))
 (let (($x191 (=> u_0_2 $x141)))
 (let (($x196 (and $x191 $x193 $x356)))
 (let (($x194 (and $x196 $x185)))
 (let (($x195 (=> $x146 $x194)))
 (let (($x151 (= u_2_2 u_1_1)))
 (let (($x153 (= u_1_2 u_0_1)))
 (let (($x155 (= u_0_2 true)))
 (let (($x156 (and $x155 $x153 $x151)))
 (let (($x161 (= x_2_2 x_1_1)))
 (let (($x162 (=> u_2_2 $x161)))
 (let (($x139 (and $x162 $x156)))
 (let (($x158 (= x_1_2 x_0_1)))
 (let (($x140 (and $x158 $x139)))
 (let (($x189 (and $x141 $x140)))
 (let (($x167 (not u_2_1)))
 (let (($x187 (and $x167 $x189)))
 (let (($x188 (and u_0_1 $x187)))
 (let (($x190 (=> $x145 $x188)))
 (let (($x357 (and $x356 $x185)))
 (let (($x174 (= x_0_2 x_1_1)))
 (let (($x358 (and $x174 $x158)))
 (let (($x359 (and $x358 $x357)))
 (let (($x136 (and u_1_1 $x359)))
 (let (($x137 (and u_0_1 $x136)))
 (let (($x138 (=> $x144 $x137)))
 (let (($x179 (and (and (=> u_0_2 $x174) (=> u_1_2 (= x_1_2 x_2_1))) (and (= u_0_2 u_1_1) (= u_1_2 u_2_1) (= u_2_2 false)))))
 (let (($x181 (=> $x143 (and u_0_1 $x179))))
 (let (($x168 (and $x167 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x158) $x162) $x156)))))
 (let (($x169 (=> $x142 $x168)))
 (let (($x71 (= 4 t_0)))
 (let (($x70 (= 3 t_0)))
 (let (($x68 (= 2 t_0)))
 (let (($x66 (= 1 t_0)))
 (let (($x65 (= 0 t_0)))
 (let (($x110 (= u_2_1 u_2_0)))
 (let (($x111 (= u_1_1 u_1_0)))
 (let (($x112 (= u_0_1 u_0_0)))
 (let (($x113 (and $x112 $x111 $x110)))
 (let (($x114 (= x_2_1 x_2_0)))
 (let (($x115 (=> u_2_1 $x114)))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x115)))
 (let (($x134 (=> $x71 (and $x132 $x113))))
 (let (($x77 (= u_2_1 u_1_0)))
 (let (($x79 (= u_1_1 u_0_0)))
 (let (($x81 (= u_0_1 true)))
 (let (($x82 (and $x81 $x79 $x77)))
 (let (($x88 (= x_2_1 x_1_0)))
 (let (($x89 (=> u_2_1 $x88)))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x124 (= x_0_1 x_0_0)))
 (let (($x94 (not u_2_0)))
 (let (($x128 (=> $x70 (and u_0_0 (and $x94 (and $x124 (and $x84 (and $x89 $x82))))))))
 (let (($x120 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) (and $x115 $x113))))))
 (let (($x121 (=> $x68 $x120)))
 (let (($x106 (and (=> u_0_1 (= x_0_1 x_1_0)) (=> u_1_1 (= x_1_1 x_2_0)))))
 (let (($x107 (and $x106 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x109 (=> $x66 (and u_0_0 $x107))))
 (let (($x95 (and $x94 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x84) $x89) $x82)))))
 (let (($x96 (=> $x65 $x95)))
 (let (($x378 (and (and (and $x96 $x109 $x121 $x128 $x134) (or $x65 $x66 $x68 $x70 $x71)) (and (and $x169 $x181 $x138 $x190 $x195) (or $x142 $x143 $x144 $x145 $x146)))))
 (let (($x170 (= u_2_2 false)))
 (let (($x381 (and (and (and (= x_0_2 146) $x155) (= u_1_2 false) $x170) (and true (and $x378 (and $x56 (and $x37 $x41)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x381))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)