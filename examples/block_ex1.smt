; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x41 (and (<= 0 a_1) (< a_1 1024))))
 (let (($x37 (and (<= 0 a_0) (< a_0 1024))))
 (let (($x53 (= t_1 4)))
 (let (($x56 (=> (= t_0 4) $x53)))
 (let (($x171 (= 4 t_1)))
 (let (($x146 (= 3 t_1)))
 (let (($x145 (= 2 t_1)))
 (let (($x144 (= 1 t_1)))
 (let (($x143 (= 0 t_1)))
 (let (($x190 (= u_2_2 u_2_1)))
 (let (($x191 (= u_1_2 u_1_1)))
 (let (($x188 (= u_0_2 u_0_1)))
 (let (($x187 (and $x188 $x191 $x190)))
 (let (($x186 (= x_2_2 x_2_1)))
 (let (($x189 (=> u_2_2 $x186)))
 (let (($x205 (= x_1_2 x_1_1)))
 (let (($x206 (=> u_1_2 $x205)))
 (let (($x199 (= x_0_2 x_0_1)))
 (let (($x150 (=> u_0_2 $x199)))
 (let (($x207 (and $x150 $x206 $x189)))
 (let (($x208 (and $x207 $x187)))
 (let (($x209 (=> $x171 $x208)))
 (let (($x162 (= u_2_2 u_1_1)))
 (let (($x154 (= u_1_2 u_0_1)))
 (let (($x165 (= u_0_2 true)))
 (let (($x166 (and $x165 $x154 $x162)))
 (let (($x155 (= x_2_2 x_1_1)))
 (let (($x160 (=> u_2_2 $x155)))
 (let (($x200 (and $x160 $x166)))
 (let (($x158 (= x_1_2 x_0_1)))
 (let (($x198 (and $x158 $x200)))
 (let (($x201 (and $x199 $x198)))
 (let (($x147 (not u_2_1)))
 (let (($x202 (and $x147 $x201)))
 (let (($x203 (and u_0_1 $x202)))
 (let (($x204 (=> $x146 $x203)))
 (let (($x192 (and $x189 $x187)))
 (let (($x175 (= x_0_2 x_1_1)))
 (let (($x194 (and $x175 $x158)))
 (let (($x195 (and $x194 $x192)))
 (let (($x196 (and u_1_1 $x195)))
 (let (($x197 (and u_0_1 $x196)))
 (let (($x149 (=> $x145 $x197)))
 (let (($x180 (= u_2_2 false)))
 (let (($x181 (= u_1_2 u_2_1)))
 (let (($x182 (= u_0_2 u_1_1)))
 (let (($x176 (and $x182 $x181 $x180)))
 (let (($x177 (= x_1_2 x_2_1)))
 (let (($x183 (=> u_1_2 $x177)))
 (let (($x174 (=> u_0_2 $x175)))
 (let (($x184 (and $x174 $x183)))
 (let (($x185 (and $x184 $x176)))
 (let (($x148 (and u_0_1 $x185)))
 (let (($x193 (=> $x144 $x148)))
 (let (($x159 (=> u_1_2 $x158)))
 (let (($x168 (and $x159 $x160)))
 (let (($x170 (and $x168 $x166)))
 (let (($x172 (= x_0_2 a_1)))
 (let (($x173 (and $x172 $x170)))
 (let (($x178 (and $x147 $x173)))
 (let (($x179 (=> $x143 $x178)))
 (let (($x71 (= 4 t_0)))
 (let (($x70 (= 3 t_0)))
 (let (($x68 (= 2 t_0)))
 (let (($x66 (= 1 t_0)))
 (let (($x65 (= 0 t_0)))
 (let (($x110 (= u_2_1 u_2_0)))
 (let (($x111 (= u_1_1 u_1_0)))
 (let (($x112 (= u_0_1 u_0_0)))
 (let (($x113 (and $x112 $x111 $x110)))
 (let (($x114 (= x_2_1 x_2_0)))
 (let (($x115 (=> u_2_1 $x114)))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x115)))
 (let (($x134 (=> $x71 (and $x132 $x113))))
 (let (($x77 (= u_2_1 u_1_0)))
 (let (($x79 (= u_1_1 u_0_0)))
 (let (($x81 (= u_0_1 true)))
 (let (($x82 (and $x81 $x79 $x77)))
 (let (($x88 (= x_2_1 x_1_0)))
 (let (($x89 (=> u_2_1 $x88)))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x124 (= x_0_1 x_0_0)))
 (let (($x94 (not u_2_0)))
 (let (($x128 (=> $x70 (and u_0_0 (and $x94 (and $x124 (and $x84 (and $x89 $x82))))))))
 (let (($x120 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) (and $x115 $x113))))))
 (let (($x121 (=> $x68 $x120)))
 (let (($x97 (= u_2_1 false)))
 (let (($x98 (= u_1_1 u_2_0)))
 (let (($x99 (= u_0_1 u_1_0)))
 (let (($x100 (and $x99 $x98 $x97)))
 (let (($x104 (= x_1_1 x_2_0)))
 (let (($x105 (=> u_1_1 $x104)))
 (let (($x109 (=> $x66 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x105) $x100)))))
 (let (($x95 (and $x94 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x84) $x89) $x82)))))
 (let (($x96 (=> $x65 $x95)))
 (let (($x394 (and (and (and $x96 $x109 $x121 $x128 $x134) (or $x65 $x66 $x68 $x70 $x71)) (and (and $x179 $x193 $x149 $x204 $x209) (or $x143 $x144 $x145 $x146 $x171)))))
 (let (($x397 (and (and (and (= x_0_2 146) $x165) (= u_1_2 false) $x180) (and true (and $x394 (and $x56 (and $x37 $x41)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x397)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)