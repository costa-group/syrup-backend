; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x41 (and (<= 0 a_1) (< a_1 1024))))
 (let (($x37 (and (<= 0 a_0) (< a_0 1024))))
 (let (($x53 (= t_1 4)))
 (let (($x56 (=> (= t_0 4) $x53)))
 (let (($x172 (= 4 t_1)))
 (let (($x147 (= 3 t_1)))
 (let (($x146 (= 2 t_1)))
 (let (($x145 (= 1 t_1)))
 (let (($x144 (= 0 t_1)))
 (let (($x191 (= u_2_2 u_2_1)))
 (let (($x192 (= u_1_2 u_1_1)))
 (let (($x189 (= u_0_2 u_0_1)))
 (let (($x188 (and $x189 $x192 $x191)))
 (let (($x187 (= x_2_2 x_2_1)))
 (let (($x190 (=> u_2_2 $x187)))
 (let (($x206 (= x_1_2 x_1_1)))
 (let (($x207 (=> u_1_2 $x206)))
 (let (($x200 (= x_0_2 x_0_1)))
 (let (($x151 (=> u_0_2 $x200)))
 (let (($x208 (and $x151 $x207 $x190)))
 (let (($x209 (and $x208 $x188)))
 (let (($x210 (=> $x172 $x209)))
 (let (($x163 (= u_2_2 u_1_1)))
 (let (($x155 (= u_1_2 u_0_1)))
 (let (($x166 (= u_0_2 true)))
 (let (($x167 (and $x166 $x155 $x163)))
 (let (($x156 (= x_2_2 x_1_1)))
 (let (($x161 (=> u_2_2 $x156)))
 (let (($x201 (and $x161 $x167)))
 (let (($x159 (= x_1_2 x_0_1)))
 (let (($x199 (and $x159 $x201)))
 (let (($x202 (and $x200 $x199)))
 (let (($x148 (not u_2_1)))
 (let (($x203 (and $x148 $x202)))
 (let (($x204 (and u_0_1 $x203)))
 (let (($x205 (=> $x147 $x204)))
 (let (($x193 (and $x190 $x188)))
 (let (($x176 (= x_0_2 x_1_1)))
 (let (($x195 (and $x176 $x159)))
 (let (($x196 (and $x195 $x193)))
 (let (($x197 (and u_1_1 $x196)))
 (let (($x198 (and u_0_1 $x197)))
 (let (($x150 (=> $x146 $x198)))
 (let (($x181 (= u_2_2 false)))
 (let (($x182 (= u_1_2 u_2_1)))
 (let (($x183 (= u_0_2 u_1_1)))
 (let (($x177 (and $x183 $x182 $x181)))
 (let (($x178 (= x_1_2 x_2_1)))
 (let (($x184 (=> u_1_2 $x178)))
 (let (($x175 (=> u_0_2 $x176)))
 (let (($x185 (and $x175 $x184)))
 (let (($x186 (and $x185 $x177)))
 (let (($x149 (and u_0_1 $x186)))
 (let (($x194 (=> $x145 $x149)))
 (let (($x160 (=> u_1_2 $x159)))
 (let (($x169 (and $x160 $x161)))
 (let (($x171 (and $x169 $x167)))
 (let (($x173 (= x_0_2 a_1)))
 (let (($x174 (and $x173 $x171)))
 (let (($x179 (and $x148 $x174)))
 (let (($x180 (=> $x144 $x179)))
 (let (($x71 (= 4 t_0)))
 (let (($x70 (= 3 t_0)))
 (let (($x68 (= 2 t_0)))
 (let (($x66 (= 1 t_0)))
 (let (($x65 (= 0 t_0)))
 (let (($x110 (= u_2_1 u_2_0)))
 (let (($x111 (= u_1_1 u_1_0)))
 (let (($x112 (= u_0_1 u_0_0)))
 (let (($x113 (and $x112 $x111 $x110)))
 (let (($x114 (= x_2_1 x_2_0)))
 (let (($x115 (=> u_2_1 $x114)))
 (let (($x132 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x115)))
 (let (($x134 (=> $x71 (and $x132 $x113))))
 (let (($x77 (= u_2_1 u_1_0)))
 (let (($x79 (= u_1_1 u_0_0)))
 (let (($x81 (= u_0_1 true)))
 (let (($x82 (and $x81 $x79 $x77)))
 (let (($x88 (= x_2_1 x_1_0)))
 (let (($x89 (=> u_2_1 $x88)))
 (let (($x84 (= x_1_1 x_0_0)))
 (let (($x124 (= x_0_1 x_0_0)))
 (let (($x94 (not u_2_0)))
 (let (($x128 (=> $x70 (and u_0_0 (and $x94 (and $x124 (and $x84 (and $x89 $x82))))))))
 (let (($x120 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x84) (and $x115 $x113))))))
 (let (($x121 (=> $x68 $x120)))
 (let (($x97 (= u_2_1 false)))
 (let (($x98 (= u_1_1 u_2_0)))
 (let (($x99 (= u_0_1 u_1_0)))
 (let (($x100 (and $x99 $x98 $x97)))
 (let (($x104 (= x_1_1 x_2_0)))
 (let (($x105 (=> u_1_1 $x104)))
 (let (($x109 (=> $x66 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x105) $x100)))))
 (let (($x95 (and $x94 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x84) $x89) $x82)))))
 (let (($x96 (=> $x65 $x95)))
 (let (($x398 (and (and (and $x96 $x109 $x121 $x128 $x134) (or $x65 $x66 $x68 $x70 $x71)) (and (and $x180 $x194 $x150 $x205 $x210) (or $x144 $x145 $x146 $x147 $x172)))))
 (let (($x401 (and (and (and (= x_0_2 146) $x166) (= u_1_2 false) $x181) (and true (and $x398 (and $x56 (and $x37 $x41)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x401)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)