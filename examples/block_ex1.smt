; 
(set-info :status unknown)
(declare-fun t_3 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_2_4 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_1_4 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_0_4 () Int)
(declare-fun a_3 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun a_2 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun a_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun a_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_3 () Bool)
(declare-fun u_2_4 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_1_4 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_0_4 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x244 (and (=> (= t_0 4) (= t_1 4)) (=> (= t_1 4) (= t_2 4)) (=> (= t_2 4) (= t_3 4)))))
 (let (($x322 (= 4 t_3)))
 (let (($x321 (= 3 t_3)))
 (let (($x359 (and (= u_0_4 u_0_3) (= u_1_4 u_1_3) (= u_2_4 u_2_3))))
 (let (($x361 (=> u_2_4 (= x_2_4 x_2_3))))
 (let (($x115 (and (=> u_0_4 (= x_0_4 x_0_3)) (=> u_1_4 (= x_1_4 x_1_3)) $x361)))
 (let (($x330 (and (= u_0_4 true) (= u_1_4 u_0_3) (= u_2_4 u_1_3))))
 (let (($x336 (=> u_2_4 (= x_2_4 x_1_3))))
 (let (($x332 (= x_1_4 x_0_3)))
 (let (($x30 (= x_0_4 x_0_3)))
 (let (($x341 (not u_2_3)))
 (let (($x110 (=> $x321 (and u_0_3 (and $x341 (and $x30 (and $x332 (and $x336 $x330))))))))
 (let (($x366 (and u_0_3 (and u_1_3 (and (and (= x_0_4 x_1_3) $x332) (and $x361 $x359))))))
 (let (($x352 (and (=> u_0_4 (= x_0_4 x_1_3)) (=> u_1_4 (= x_1_4 x_2_3)))))
 (let (($x353 (and $x352 (and (= u_0_4 u_1_3) (= u_1_4 u_2_3) (= u_2_4 false)))))
 (let (($x342 (and $x341 (and (= x_0_4 a_3) (and (and (=> u_1_4 $x332) $x336) $x330)))))
 (let (($x118 (and (=> (= 0 t_3) $x342) (=> (= 1 t_3) (and u_0_3 $x353)) (=> (= 2 t_3) $x366) $x110 (=> $x322 (and $x115 $x359)))))
 (let (($x119 (and $x118 (or (= 0 t_3) (= 1 t_3) (= 2 t_3) $x321 $x322))))
 (let (($x256 (or (= 0 t_2) (= 1 t_2) (= 2 t_2) (= 3 t_2) (= 4 t_2))))
 (let (($x313 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) (=> u_2_3 (= x_2_3 x_2_2)))))
 (let (($x314 (and $x313 (and (= u_0_3 u_0_2) (= u_1_3 u_1_2) (= u_2_3 u_2_2)))))
 (let (($x303 (and (=> u_2_3 (= x_2_3 x_1_2)) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x267 (= x_1_3 x_0_2)))
 (let (($x308 (and u_0_2 (and (not u_2_2) (and (= x_0_3 x_0_2) (and $x267 $x303))))))
 (let (($x297 (and (=> u_2_3 (= x_2_3 x_2_2)) (and (= u_0_3 u_0_2) (= u_1_3 u_1_2) (= u_2_3 u_2_2)))))
 (let (($x302 (=> (= 2 t_2) (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x267) $x297))))))
 (let (($x287 (and (=> u_0_3 (= x_0_3 x_1_2)) (=> u_1_3 (= x_1_3 x_2_2)))))
 (let (($x288 (and $x287 (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false)))))
 (let (($x273 (and (and (=> u_1_3 $x267) (=> u_2_3 (= x_2_3 x_1_2))) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x278 (=> (= 0 t_2) (and (not u_2_2) (and (= x_0_3 a_2) $x273)))))
 (let (($x316 (and $x278 (=> (= 1 t_2) (and u_0_2 $x288)) $x302 (=> (= 3 t_2) $x308) (=> (= 4 t_2) $x314))))
 (let (($x124 (= 4 t_1)))
 (let (($x123 (= 3 t_1)))
 (let (($x122 (= 2 t_1)))
 (let (($x121 (= 1 t_1)))
 (let (($x120 (= 0 t_1)))
 (let (($x179 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) (=> u_2_2 (= x_2_2 x_2_1)))))
 (let (($x180 (and $x179 (and (= u_0_2 u_0_1) (= u_1_2 u_1_1) (= u_2_2 u_2_1)))))
 (let (($x169 (and (=> u_2_2 (= x_2_2 x_1_1)) (and (= u_0_2 true) (= u_1_2 u_0_1) (= u_2_2 u_1_1)))))
 (let (($x133 (= x_1_2 x_0_1)))
 (let (($x174 (and u_0_1 (and (not u_2_1) (and (= x_0_2 x_0_1) (and $x133 $x169))))))
 (let (($x163 (and (=> u_2_2 (= x_2_2 x_2_1)) (and (= u_0_2 u_0_1) (= u_1_2 u_1_1) (= u_2_2 u_2_1)))))
 (let (($x168 (=> $x122 (and u_0_1 (and u_1_1 (and (and (= x_0_2 x_1_1) $x133) $x163))))))
 (let (($x153 (and (=> u_0_2 (= x_0_2 x_1_1)) (=> u_1_2 (= x_1_2 x_2_1)))))
 (let (($x154 (and $x153 (and (= u_0_2 u_1_1) (= u_1_2 u_2_1) (= u_2_2 false)))))
 (let (($x139 (and (and (=> u_1_2 $x133) (=> u_2_2 (= x_2_2 x_1_1))) (and (= u_0_2 true) (= u_1_2 u_0_1) (= u_2_2 u_1_1)))))
 (let (($x249 (and (=> $x120 (and (not u_2_1) (and (= x_0_2 a_1) $x139))) (=> $x121 (and u_0_1 $x154)) $x168 (=> $x123 $x174) (=> $x124 $x180))))
 (let (($x44 (= 4 t_0)))
 (let (($x43 (= 3 t_0)))
 (let (($x41 (= 2 t_0)))
 (let (($x39 (= 1 t_0)))
 (let (($x38 (= 0 t_0)))
 (let (($x106 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) (=> u_2_1 (= x_2_1 x_2_0)))))
 (let (($x107 (and $x106 (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x96 (and (=> u_2_1 (= x_2_1 x_1_0)) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x58 (= x_1_1 x_0_0)))
 (let (($x101 (and u_0_0 (and (not u_2_0) (and (= x_0_1 x_0_0) (and $x58 $x96))))))
 (let (($x90 (and (=> u_2_1 (= x_2_1 x_2_0)) (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x95 (=> $x41 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x58) $x90))))))
 (let (($x80 (and (=> u_0_1 (= x_0_1 x_1_0)) (=> u_1_1 (= x_1_1 x_2_0)))))
 (let (($x81 (and $x80 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x65 (and (and (=> u_1_1 $x58) (=> u_2_1 (= x_2_1 x_1_0))) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x246 (and (=> $x38 (and (not u_2_0) (and (= x_0_1 a_0) $x65))) (=> $x39 (and u_0_0 $x81)) $x95 (=> $x43 $x101) (=> $x44 $x107))))
 (let (($x186 (and (and $x246 (or $x38 $x39 $x41 $x43 $x44)) (and $x249 (or $x120 $x121 $x122 $x123 $x124)) (and $x316 $x256) $x119)))
 (let (($x185 (and (and (= s_0 146) (and (= s_0 x_0_4) u_0_4)) (and $x186 $x244))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x185)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)