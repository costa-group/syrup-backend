; 
(set-info :status unknown)
(declare-fun a_1 () Int)
(declare-fun a_0 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (let (($x47 (and (<= 0 a_1) (< a_1 1024))))
 (let (($x43 (and (<= 0 a_0) (< a_0 1024))))
 (let (($x59 (= t_1 4)))
 (let (($x62 (=> (= t_0 4) $x59)))
 (let (($x156 (= 4 t_1)))
 (let (($x155 (= 3 t_1)))
 (let (($x154 (= 2 t_1)))
 (let (($x153 (= 1 t_1)))
 (let (($x152 (= 0 t_1)))
 (let (($x392 (or $x152 $x153 $x154 $x155 $x156)))
 (let (($x192 (= u_2_2 u_2_1)))
 (let (($x193 (= u_1_2 u_1_1)))
 (let (($x194 (= u_0_2 u_0_1)))
 (let (($x195 (and $x194 $x193 $x192)))
 (let (($x196 (= x_2_2 x_2_1)))
 (let (($x197 (=> u_2_2 $x196)))
 (let (($x212 (= x_1_2 x_1_1)))
 (let (($x213 (=> u_1_2 $x212)))
 (let (($x206 (= x_0_2 x_0_1)))
 (let (($x211 (=> u_0_2 $x206)))
 (let (($x214 (and $x211 $x213 $x197)))
 (let (($x215 (and $x214 $x195)))
 (let (($x216 (=> $x156 $x215)))
 (let (($x161 (= u_2_2 u_1_1)))
 (let (($x163 (= u_1_2 u_0_1)))
 (let (($x165 (= u_0_2 true)))
 (let (($x166 (and $x165 $x163 $x161)))
 (let (($x171 (= x_2_2 x_1_1)))
 (let (($x172 (=> u_2_2 $x171)))
 (let (($x204 (and $x172 $x166)))
 (let (($x168 (= x_1_2 x_0_1)))
 (let (($x205 (and $x168 $x204)))
 (let (($x207 (and $x206 $x205)))
 (let (($x177 (not u_2_1)))
 (let (($x208 (and $x177 $x207)))
 (let (($x209 (and u_0_1 $x208)))
 (let (($x210 (=> $x155 $x209)))
 (let (($x198 (and $x197 $x195)))
 (let (($x184 (= x_0_2 x_1_1)))
 (let (($x199 (and $x184 $x168)))
 (let (($x200 (and $x199 $x198)))
 (let (($x201 (and u_1_1 $x200)))
 (let (($x202 (and u_0_1 $x201)))
 (let (($x203 (=> $x154 $x202)))
 (let (($x180 (= u_2_2 false)))
 (let (($x181 (= u_1_2 u_2_1)))
 (let (($x182 (= u_0_2 u_1_1)))
 (let (($x183 (and $x182 $x181 $x180)))
 (let (($x186 (= x_1_2 x_2_1)))
 (let (($x187 (=> u_1_2 $x186)))
 (let (($x185 (=> u_0_2 $x184)))
 (let (($x188 (and $x185 $x187)))
 (let (($x189 (and $x188 $x183)))
 (let (($x190 (and u_0_1 $x189)))
 (let (($x191 (=> $x153 $x190)))
 (let (($x169 (=> u_1_2 $x168)))
 (let (($x173 (and $x169 $x172)))
 (let (($x174 (and $x173 $x166)))
 (let (($x175 (= x_0_2 a_1)))
 (let (($x176 (and $x175 $x174)))
 (let (($x178 (and $x177 $x176)))
 (let (($x179 (=> $x152 $x178)))
 (let (($x393 (and $x179 $x191 $x203 $x210 $x216)))
 (let (($x394 (and $x393 $x392)))
 (let (($x77 (= 4 t_0)))
 (let (($x76 (= 3 t_0)))
 (let (($x74 (= 2 t_0)))
 (let (($x72 (= 1 t_0)))
 (let (($x71 (= 0 t_0)))
 (let (($x116 (= u_2_1 u_2_0)))
 (let (($x117 (= u_1_1 u_1_0)))
 (let (($x118 (= u_0_1 u_0_0)))
 (let (($x119 (and $x118 $x117 $x116)))
 (let (($x120 (= x_2_1 x_2_0)))
 (let (($x121 (=> u_2_1 $x120)))
 (let (($x138 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x121)))
 (let (($x140 (=> $x77 (and $x138 $x119))))
 (let (($x83 (= u_2_1 u_1_0)))
 (let (($x85 (= u_1_1 u_0_0)))
 (let (($x87 (= u_0_1 true)))
 (let (($x88 (and $x87 $x85 $x83)))
 (let (($x94 (= x_2_1 x_1_0)))
 (let (($x95 (=> u_2_1 $x94)))
 (let (($x90 (= x_1_1 x_0_0)))
 (let (($x130 (= x_0_1 x_0_0)))
 (let (($x100 (not u_2_0)))
 (let (($x134 (=> $x76 (and u_0_0 (and $x100 (and $x130 (and $x90 (and $x95 $x88))))))))
 (let (($x126 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x90) (and $x121 $x119))))))
 (let (($x127 (=> $x74 $x126)))
 (let (($x103 (= u_2_1 false)))
 (let (($x106 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) $x103)))
 (let (($x111 (=> u_1_1 (= x_1_1 x_2_0))))
 (let (($x115 (=> $x72 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x111) $x106)))))
 (let (($x101 (and $x100 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x90) $x95) $x88)))))
 (let (($x102 (=> $x71 $x101)))
 (let (($x391 (and (and $x102 $x115 $x127 $x134 $x140) (or $x71 $x72 $x74 $x76 $x77))))
 (let (($x33 (= s_0 146)))
 (let (($x398 (and (and (and (= x_0_1 s_0) $x87) (= u_1_1 false) $x103) (and $x33 (and (and $x391 $x394) (and $x62 (and $x43 $x47)))))))
 (and (and (= u_0_0 false) (= u_1_0 false) (= u_2_0 false)) $x398))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(get-model)