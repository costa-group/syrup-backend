; 
(set-info :status unknown)
(declare-fun t_3 () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_3 () Int)
(declare-fun x_1_4 () Int)
(declare-fun x_0_4 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_2_4 () Int)
(declare-fun a_3 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun a_2 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun a_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun a_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_4 () Bool)
(declare-fun u_2_3 () Bool)
(declare-fun u_1_4 () Bool)
(declare-fun u_1_3 () Bool)
(declare-fun u_0_4 () Bool)
(declare-fun u_0_3 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (forall ((s_1 Int) (sk_x Int) )(let (($x36 (=> (= t_0 4) (= t_1 4))))
 (let (($x43 (and $x36 (=> (= t_1 4) (= t_2 4)) (=> (= t_2 4) (= t_3 4)))))
 (let (($x289 (or (= 0 t_3) (= 1 t_3) (= 2 t_3) (= 3 t_3) (= 4 t_3) (= 5 t_3))))
 (let (($x345 (and (=> u_1_4 (= x_1_4 x_2_3)) (and (= u_0_4 u_1_3) (= u_1_4 u_2_3) (= u_2_4 false)))))
 (let (($x368 (and (and (= x_0_3 sk_x) (and (= x_1_3 1) (= x_0_4 s_1))) $x345)))
 (let (($x342 (and (=> u_0_4 (= x_0_4 x_0_3)) (=> u_1_4 (= x_1_4 x_1_3)) (=> u_2_4 (= x_2_4 x_2_3)))))
 (let (($x343 (and $x342 (and (= u_0_4 u_0_3) (= u_1_4 u_1_3) (= u_2_4 u_2_3)))))
 (let (($x332 (and (=> u_2_4 (= x_2_4 x_1_3)) (and (= u_0_4 true) (= u_1_4 u_0_3) (= u_2_4 u_1_3)))))
 (let (($x296 (= x_1_4 x_0_3)))
 (let (($x337 (and u_0_3 (and (not u_2_3) (and (= x_0_4 x_0_3) (and $x296 $x332))))))
 (let (($x326 (and (=> u_2_4 (= x_2_4 x_2_3)) (and (= u_0_4 u_0_3) (= u_1_4 u_1_3) (= u_2_4 u_2_3)))))
 (let (($x331 (=> (= 2 t_3) (and u_0_3 (and u_1_3 (and (and (= x_0_4 x_1_3) $x296) $x326))))))
 (let (($x316 (and (=> u_0_4 (= x_0_4 x_1_3)) (=> u_1_4 (= x_1_4 x_2_3)))))
 (let (($x317 (and $x316 (and (= u_0_4 u_1_3) (= u_1_4 u_2_3) (= u_2_4 false)))))
 (let (($x302 (and (and (=> u_1_4 $x296) (=> u_2_4 (= x_2_4 x_1_3))) (and (= u_0_4 true) (= u_1_4 u_0_3) (= u_2_4 u_1_3)))))
 (let (($x307 (=> (= 0 t_3) (and (not u_2_3) (and (= x_0_4 a_3) $x302)))))
 (let (($x372 (and $x307 (=> (= 1 t_3) (and u_0_3 $x317)) $x331 (=> (= 3 t_3) $x337) (=> (= 4 t_3) $x343) (=> (= 5 t_3) (and u_0_3 (and u_1_3 $x368))))))
 (let (($x211 (or (= 0 t_2) (= 1 t_2) (= 2 t_2) (= 3 t_2) (= 4 t_2) (= 5 t_2))))
 (let (($x271 (and (=> u_1_3 (= x_1_3 x_2_2)) (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false)))))
 (let (($x378 (and (and (= x_0_2 sk_x) (and (= x_1_2 1) (= x_0_3 s_1))) $x271)))
 (let (($x268 (and (=> u_0_3 (= x_0_3 x_0_2)) (=> u_1_3 (= x_1_3 x_1_2)) (=> u_2_3 (= x_2_3 x_2_2)))))
 (let (($x269 (and $x268 (and (= u_0_3 u_0_2) (= u_1_3 u_1_2) (= u_2_3 u_2_2)))))
 (let (($x258 (and (=> u_2_3 (= x_2_3 x_1_2)) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x222 (= x_1_3 x_0_2)))
 (let (($x263 (and u_0_2 (and (not u_2_2) (and (= x_0_3 x_0_2) (and $x222 $x258))))))
 (let (($x252 (and (=> u_2_3 (= x_2_3 x_2_2)) (and (= u_0_3 u_0_2) (= u_1_3 u_1_2) (= u_2_3 u_2_2)))))
 (let (($x257 (=> (= 2 t_2) (and u_0_2 (and u_1_2 (and (and (= x_0_3 x_1_2) $x222) $x252))))))
 (let (($x242 (and (=> u_0_3 (= x_0_3 x_1_2)) (=> u_1_3 (= x_1_3 x_2_2)))))
 (let (($x243 (and $x242 (and (= u_0_3 u_1_2) (= u_1_3 u_2_2) (= u_2_3 false)))))
 (let (($x228 (and (and (=> u_1_3 $x222) (=> u_2_3 (= x_2_3 x_1_2))) (and (= u_0_3 true) (= u_1_3 u_0_2) (= u_2_3 u_1_2)))))
 (let (($x233 (=> (= 0 t_2) (and (not u_2_2) (and (= x_0_3 a_2) $x228)))))
 (let (($x382 (and $x233 (=> (= 1 t_2) (and u_0_2 $x243)) $x257 (=> (= 3 t_2) $x263) (=> (= 4 t_2) $x269) (=> (= 5 t_2) (and u_0_2 (and u_1_2 $x378))))))
 (let (($x131 (= 4 t_1)))
 (let (($x130 (= 3 t_1)))
 (let (($x129 (= 2 t_1)))
 (let (($x128 (= 1 t_1)))
 (let (($x127 (= 0 t_1)))
 (let (($x159 (and (= u_0_2 u_1_1) (= u_1_2 u_2_1) (= u_2_2 false))))
 (let (($x163 (=> u_1_2 (= x_1_2 x_2_1))))
 (let (($x388 (and (and (= x_0_1 sk_x) (and (= x_1_1 1) (= x_0_2 s_1))) (and $x163 $x159))))
 (let (($x168 (= u_2_2 u_2_1)))
 (let (($x169 (= u_1_2 u_1_1)))
 (let (($x170 (= u_0_2 u_0_1)))
 (let (($x171 (and $x170 $x169 $x168)))
 (let (($x172 (= x_2_2 x_2_1)))
 (let (($x173 (=> u_2_2 $x172)))
 (let (($x190 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) $x173)))
 (let (($x192 (=> $x131 (and $x190 $x171))))
 (let (($x142 (and (= u_0_2 true) (= u_1_2 u_0_1) (= u_2_2 u_1_1))))
 (let (($x148 (=> u_2_2 (= x_2_2 x_1_1))))
 (let (($x144 (= x_1_2 x_0_1)))
 (let (($x182 (= x_0_2 x_0_1)))
 (let (($x153 (not u_2_1)))
 (let (($x186 (=> $x130 (and u_0_1 (and $x153 (and $x182 (and $x144 (and $x148 $x142))))))))
 (let (($x178 (and u_0_1 (and u_1_1 (and (and (= x_0_2 x_1_1) $x144) (and $x173 $x171))))))
 (let (($x179 (=> $x129 $x178)))
 (let (($x167 (=> $x128 (and u_0_1 (and (and (=> u_0_2 (= x_0_2 x_1_1)) $x163) $x159)))))
 (let (($x154 (and $x153 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x144) $x148) $x142)))))
 (let (($x155 (=> $x127 $x154)))
 (let (($x392 (and $x155 $x167 $x179 $x186 $x192 (=> (= 5 t_1) (and u_0_1 (and u_1_1 $x388))))))
 (let (($x51 (= 4 t_0)))
 (let (($x50 (= 3 t_0)))
 (let (($x48 (= 2 t_0)))
 (let (($x46 (= 1 t_0)))
 (let (($x45 (= 0 t_0)))
 (let (($x116 (and (=> u_1_1 (= x_1_1 x_2_0)) (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x398 (and (and (= x_0_0 sk_x) (and (= x_1_0 1) (= x_0_1 s_1))) $x116)))
 (let (($x113 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) (=> u_2_1 (= x_2_1 x_2_0)))))
 (let (($x114 (and $x113 (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x103 (and (=> u_2_1 (= x_2_1 x_1_0)) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x65 (= x_1_1 x_0_0)))
 (let (($x108 (and u_0_0 (and (not u_2_0) (and (= x_0_1 x_0_0) (and $x65 $x103))))))
 (let (($x97 (and (=> u_2_1 (= x_2_1 x_2_0)) (and (= u_0_1 u_0_0) (= u_1_1 u_1_0) (= u_2_1 u_2_0)))))
 (let (($x102 (=> $x48 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x65) $x97))))))
 (let (($x87 (and (=> u_0_1 (= x_0_1 x_1_0)) (=> u_1_1 (= x_1_1 x_2_0)))))
 (let (($x88 (and $x87 (and (= u_0_1 u_1_0) (= u_1_1 u_2_0) (= u_2_1 false)))))
 (let (($x72 (and (and (=> u_1_1 $x65) (=> u_2_1 (= x_2_1 x_1_0))) (and (= u_0_1 true) (= u_1_1 u_0_0) (= u_2_1 u_1_0)))))
 (let (($x402 (and (=> $x45 (and (not u_2_0) (and (= x_0_1 a_0) $x72))) (=> $x46 (and u_0_0 $x88)) $x102 (=> $x50 $x108) (=> $x51 $x114) (=> (= 5 t_0) (and u_0_0 (and u_1_0 $x398))))))
 (let (($x404 (and (and $x402 (or $x45 $x46 $x48 $x50 $x51 (= 5 t_0))) (and $x392 (or $x127 $x128 $x129 $x130 $x131 (= 5 t_1))) (and $x382 $x211) (and $x372 $x289))))
 (let (($x406 (and (and (= s_0 146) (and (= s_0 x_0_4) (and u_0_4 u_1_4))) (and $x404 $x43))))
 (let (($x408 (and (and (= x_0_0 sk_x) (= u_0_0 true)) (= u_1_0 false) (= u_2_0 false))))
 (and (=> (and (= s_1 x_1_4) (= x_0_0 sk_x)) $x408) $x406)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
(get-model)