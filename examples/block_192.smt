; 
(set-info :status unknown)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun a_1 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun a_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_2_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (forall ((s_1 Int) (sk_x Int) )(let (($x32 (= t_1 4)))
 (let (($x34 (= t_0 4)))
 (let (($x35 (=> $x34 $x32)))
 (let (($x124 (= 5 t_1)))
 (let (($x123 (= 4 t_1)))
 (let (($x122 (= 3 t_1)))
 (let (($x121 (= 2 t_1)))
 (let (($x120 (= 1 t_1)))
 (let (($x119 (= 0 t_1)))
 (let (($x125 (or $x119 $x120 $x121 $x122 $x123 $x124)))
 (let (($x144 (= u_2_2 false)))
 (let (($x145 (= u_1_2 u_2_1)))
 (let (($x146 (= u_0_2 u_1_1)))
 (let (($x147 (and $x146 $x145 $x144)))
 (let (($x150 (= x_1_2 x_2_1)))
 (let (($x151 (=> u_1_2 $x150)))
 (let (($x181 (and $x151 $x147)))
 (let (($x204 (and (=> (and (= x_0_1 sk_x) (= x_1_1 1)) (= x_0_2 s_1)) $x181)))
 (let (($x156 (= u_2_2 u_2_1)))
 (let (($x157 (= u_1_2 u_1_1)))
 (let (($x158 (= u_0_2 u_0_1)))
 (let (($x159 (and $x158 $x157 $x156)))
 (let (($x160 (= x_2_2 x_2_1)))
 (let (($x161 (=> u_2_2 $x160)))
 (let (($x176 (= x_1_2 x_1_1)))
 (let (($x177 (=> u_1_2 $x176)))
 (let (($x170 (= x_0_2 x_0_1)))
 (let (($x175 (=> u_0_2 $x170)))
 (let (($x178 (and $x175 $x177 $x161)))
 (let (($x179 (and $x178 $x159)))
 (let (($x180 (=> $x123 $x179)))
 (let (($x128 (= u_2_2 u_1_1)))
 (let (($x129 (= u_1_2 u_0_1)))
 (let (($x130 (= u_0_2 true)))
 (let (($x131 (and $x130 $x129 $x128)))
 (let (($x135 (= x_2_2 x_1_1)))
 (let (($x136 (=> u_2_2 $x135)))
 (let (($x168 (and $x136 $x131)))
 (let (($x132 (= x_1_2 x_0_1)))
 (let (($x169 (and $x132 $x168)))
 (let (($x171 (and $x170 $x169)))
 (let (($x141 (not u_2_1)))
 (let (($x172 (and $x141 $x171)))
 (let (($x173 (and u_0_1 $x172)))
 (let (($x174 (=> $x122 $x173)))
 (let (($x162 (and $x161 $x159)))
 (let (($x148 (= x_0_2 x_1_1)))
 (let (($x163 (and $x148 $x132)))
 (let (($x164 (and $x163 $x162)))
 (let (($x165 (and u_1_1 $x164)))
 (let (($x166 (and u_0_1 $x165)))
 (let (($x167 (=> $x121 $x166)))
 (let (($x149 (=> u_0_2 $x148)))
 (let (($x152 (and $x149 $x151)))
 (let (($x153 (and $x152 $x147)))
 (let (($x154 (and u_0_1 $x153)))
 (let (($x155 (=> $x120 $x154)))
 (let (($x133 (=> u_1_2 $x132)))
 (let (($x137 (and $x133 $x136)))
 (let (($x138 (and $x137 $x131)))
 (let (($x139 (= x_0_2 a_1)))
 (let (($x140 (and $x139 $x138)))
 (let (($x142 (and $x141 $x140)))
 (let (($x143 (=> $x119 $x142)))
 (let (($x208 (and $x143 $x155 $x167 $x174 $x180 (=> $x124 (and u_0_1 (and u_1_1 $x204))))))
 (let (($x45 (= 5 t_0)))
 (let (($x43 (= 4 t_0)))
 (let (($x42 (= 3 t_0)))
 (let (($x40 (= 2 t_0)))
 (let (($x38 (= 1 t_0)))
 (let (($x37 (= 0 t_0)))
 (let (($x46 (or $x37 $x38 $x40 $x42 $x43 $x45)))
 (let (($x70 (= u_2_1 false)))
 (let (($x71 (= u_1_1 u_2_0)))
 (let (($x72 (= u_0_1 u_1_0)))
 (let (($x73 (and $x72 $x71 $x70)))
 (let (($x77 (= x_1_1 x_2_0)))
 (let (($x78 (=> u_1_1 $x77)))
 (let (($x108 (and $x78 $x73)))
 (let (($x214 (and (=> (and (= x_0_0 sk_x) (= x_1_0 1)) (= x_0_1 s_1)) $x108)))
 (let (($x83 (= u_2_1 u_2_0)))
 (let (($x84 (= u_1_1 u_1_0)))
 (let (($x85 (= u_0_1 u_0_0)))
 (let (($x86 (and $x85 $x84 $x83)))
 (let (($x87 (= x_2_1 x_2_0)))
 (let (($x88 (=> u_2_1 $x87)))
 (let (($x103 (= x_1_1 x_1_0)))
 (let (($x104 (=> u_1_1 $x103)))
 (let (($x97 (= x_0_1 x_0_0)))
 (let (($x102 (=> u_0_1 $x97)))
 (let (($x105 (and $x102 $x104 $x88)))
 (let (($x106 (and $x105 $x86)))
 (let (($x107 (=> $x43 $x106)))
 (let (($x50 (= u_2_1 u_1_0)))
 (let (($x52 (= u_1_1 u_0_0)))
 (let (($x54 (= u_0_1 true)))
 (let (($x55 (and $x54 $x52 $x50)))
 (let (($x61 (= x_2_1 x_1_0)))
 (let (($x62 (=> u_2_1 $x61)))
 (let (($x95 (and $x62 $x55)))
 (let (($x57 (= x_1_1 x_0_0)))
 (let (($x96 (and $x57 $x95)))
 (let (($x98 (and $x97 $x96)))
 (let (($x67 (not u_2_0)))
 (let (($x99 (and $x67 $x98)))
 (let (($x100 (and u_0_0 $x99)))
 (let (($x101 (=> $x42 $x100)))
 (let (($x89 (and $x88 $x86)))
 (let (($x74 (= x_0_1 x_1_0)))
 (let (($x90 (and $x74 $x57)))
 (let (($x91 (and $x90 $x89)))
 (let (($x92 (and u_1_0 $x91)))
 (let (($x93 (and u_0_0 $x92)))
 (let (($x94 (=> $x40 $x93)))
 (let (($x75 (=> u_0_1 $x74)))
 (let (($x79 (and $x75 $x78)))
 (let (($x80 (and $x79 $x73)))
 (let (($x81 (and u_0_0 $x80)))
 (let (($x82 (=> $x38 $x81)))
 (let (($x58 (=> u_1_1 $x57)))
 (let (($x63 (and $x58 $x62)))
 (let (($x64 (and $x63 $x55)))
 (let (($x65 (= x_0_1 a_0)))
 (let (($x66 (and $x65 $x64)))
 (let (($x68 (and $x67 $x66)))
 (let (($x69 (=> $x37 $x68)))
 (let (($x218 (and $x69 $x82 $x94 $x101 $x107 (=> $x45 (and u_0_0 (and u_1_0 $x214))))))
 (let (($x23 (= s_0 146)))
 (let (($x24 (and $x23 (and (= s_0 x_0_2) (and u_0_2 u_1_2)))))
 (let (($x10 (= u_2_0 false)))
 (let (($x12 (= u_1_0 false)))
 (let (($x15 (and (= u_0_0 true) $x12 $x10)))
 (and (=> (and (= s_1 x_1_2) (= x_0_0 sk_x)) $x15) (and $x24 (and (and (and $x218 $x46) (and $x208 $x125)) $x35))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
(get-model)