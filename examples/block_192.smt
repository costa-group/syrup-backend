; 
(set-info :status unknown)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_3_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_0_1 () Int)
(declare-fun a_1 () Int)
(declare-fun x_3_0 () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun a_0 () Int)
(declare-fun s_0 () Int)
(declare-fun u_3_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_3_0 () Bool)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(assert
 (forall ((s_1 Int) (sk_x Int) )(let (($x31 (=> (= t_0 4) (= t_1 4))))
 (let (($x123 (= 5 t_1)))
 (let (($x122 (= 4 t_1)))
 (let (($x121 (= 3 t_1)))
 (let (($x120 (= 2 t_1)))
 (let (($x119 (= 1 t_1)))
 (let (($x118 (= 0 t_1)))
 (let (($x124 (or $x118 $x119 $x120 $x121 $x122 $x123)))
 (let (($x148 (= u_2_2 u_3_1)))
 (let (($x149 (= u_1_2 u_2_1)))
 (let (($x150 (= u_0_2 u_1_1)))
 (let (($x151 (and $x150 $x149 $x148)))
 (let (($x157 (= x_2_2 x_3_1)))
 (let (($x158 (=> u_2_2 $x157)))
 (let (($x154 (= x_1_2 x_2_1)))
 (let (($x155 (=> u_1_2 $x154)))
 (let (($x189 (and (and $x155 $x158) $x151)))
 (let (($x212 (and (=> (and (= x_0_1 sk_x) (= x_1_1 1)) (= x_0_2 s_1)) $x189)))
 (let (($x163 (= u_2_2 u_2_1)))
 (let (($x164 (= u_1_2 u_1_1)))
 (let (($x165 (= u_0_2 u_0_1)))
 (let (($x166 (and $x165 $x164 $x163)))
 (let (($x167 (= x_2_2 x_2_1)))
 (let (($x168 (=> u_2_2 $x167)))
 (let (($x185 (and (=> u_0_2 (= x_0_2 x_0_1)) (=> u_1_2 (= x_1_2 x_1_1)) $x168)))
 (let (($x187 (=> $x122 (and $x185 $x166))))
 (let (($x128 (= u_2_2 u_1_1)))
 (let (($x130 (= u_1_2 u_0_1)))
 (let (($x132 (= u_0_2 true)))
 (let (($x133 (and $x132 $x130 $x128)))
 (let (($x138 (= x_2_2 x_1_1)))
 (let (($x139 (=> u_2_2 $x138)))
 (let (($x135 (= x_1_2 x_0_1)))
 (let (($x177 (= x_0_2 x_0_1)))
 (let (($x144 (not u_2_1)))
 (let (($x181 (=> $x121 (and u_0_1 (and $x144 (and $x177 (and $x135 (and $x139 $x133))))))))
 (let (($x173 (and u_0_1 (and u_1_1 (and (and (= x_0_2 x_1_1) $x135) (and $x168 $x166))))))
 (let (($x174 (=> $x120 $x173)))
 (let (($x161 (and u_0_1 (and (and (=> u_0_2 (= x_0_2 x_1_1)) $x155 $x158) $x151))))
 (let (($x162 (=> $x119 $x161)))
 (let (($x145 (and $x144 (and (= x_0_2 a_1) (and (and (=> u_1_2 $x135) $x139) $x133)))))
 (let (($x146 (=> $x118 $x145)))
 (let (($x216 (or $x146 $x162 $x174 $x181 $x187 (=> $x123 (and u_0_1 (=> u_1_1 $x212))))))
 (let (($x41 (= 5 t_0)))
 (let (($x39 (= 4 t_0)))
 (let (($x38 (= 3 t_0)))
 (let (($x36 (= 2 t_0)))
 (let (($x34 (= 1 t_0)))
 (let (($x33 (= 0 t_0)))
 (let (($x42 (or $x33 $x34 $x36 $x38 $x39 $x41)))
 (let (($x65 (= u_2_1 u_3_0)))
 (let (($x66 (= u_1_1 u_2_0)))
 (let (($x67 (= u_0_1 u_1_0)))
 (let (($x68 (and $x67 $x66 $x65)))
 (let (($x75 (= x_2_1 x_3_0)))
 (let (($x76 (=> u_2_1 $x75)))
 (let (($x72 (= x_1_1 x_2_0)))
 (let (($x73 (=> u_1_1 $x72)))
 (let (($x107 (and (and $x73 $x76) $x68)))
 (let (($x222 (and (=> (and (= x_0_0 sk_x) (= x_1_0 1)) (= x_0_1 s_1)) $x107)))
 (let (($x81 (= u_2_1 u_2_0)))
 (let (($x82 (= u_1_1 u_1_0)))
 (let (($x83 (= u_0_1 u_0_0)))
 (let (($x84 (and $x83 $x82 $x81)))
 (let (($x85 (= x_2_1 x_2_0)))
 (let (($x86 (=> u_2_1 $x85)))
 (let (($x103 (and (=> u_0_1 (= x_0_1 x_0_0)) (=> u_1_1 (= x_1_1 x_1_0)) $x86)))
 (let (($x105 (=> $x39 (and $x103 $x84))))
 (let (($x45 (= u_2_1 u_1_0)))
 (let (($x47 (= u_1_1 u_0_0)))
 (let (($x49 (= u_0_1 true)))
 (let (($x50 (and $x49 $x47 $x45)))
 (let (($x55 (= x_2_1 x_1_0)))
 (let (($x56 (=> u_2_1 $x55)))
 (let (($x51 (= x_1_1 x_0_0)))
 (let (($x95 (= x_0_1 x_0_0)))
 (let (($x61 (not u_2_0)))
 (let (($x99 (=> $x38 (and u_0_0 (and $x61 (and $x95 (and $x51 (and $x56 $x50))))))))
 (let (($x91 (and u_0_0 (and u_1_0 (and (and (= x_0_1 x_1_0) $x51) (and $x86 $x84))))))
 (let (($x92 (=> $x36 $x91)))
 (let (($x79 (and u_0_0 (and (and (=> u_0_1 (= x_0_1 x_1_0)) $x73 $x76) $x68))))
 (let (($x80 (=> $x34 $x79)))
 (let (($x62 (and $x61 (and (= x_0_1 a_0) (and (and (=> u_1_1 $x51) $x56) $x50)))))
 (let (($x63 (=> $x33 $x62)))
 (let (($x226 (or $x63 $x80 $x92 $x99 $x105 (=> $x41 (and u_0_0 (=> u_1_0 $x222))))))
 (let (($x20 (and (= s_0 146) (= s_0 x_0_1))))
 (let (($x15 (and (= u_0_0 true) (= u_1_0 false) (= u_2_0 false))))
 (and (=> (and (= s_1 x_1_1) (= x_0_0 sk_x)) $x15) (and $x20 (and (and (and $x226 $x42) (and $x216 $x124)) $x31)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
(get-model)