; 
(set-info :status unknown)
(declare-fun s_0 () Int)
(declare-fun instr_NOP () Int)
(declare-fun t_2 () Int)
(declare-fun t_1 () Int)
(declare-fun t_0 () Int)
(declare-fun x_2_1 () Int)
(declare-fun x_2_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun instr_DUP () Int)
(declare-fun x_3_1 () Int)
(declare-fun instr_POP () Int)
(declare-fun instr_ADD () Int)
(declare-fun a_2 () Int)
(declare-fun instr_PUSH () Int)
(declare-fun instr_SWAP () Int)
(declare-fun x_2_0 () Int)
(declare-fun x_1_0 () Int)
(declare-fun x_0_0 () Int)
(declare-fun x_3_0 () Int)
(declare-fun a_1 () Int)
(declare-fun u_2_0 () Bool)
(declare-fun u_1_0 () Bool)
(declare-fun u_0_0 () Bool)
(declare-fun u_2_1 () Bool)
(declare-fun u_2_2 () Bool)
(declare-fun u_1_1 () Bool)
(declare-fun u_1_2 () Bool)
(declare-fun u_0_1 () Bool)
(declare-fun u_0_2 () Bool)
(declare-fun u_3_1 () Bool)
(declare-fun u_3_0 () Bool)
(assert
 (let (($x23 (and (= s_0 146) (and (= u_0_0 true) (= u_1_0 false) (= u_2_0 false)))))
 (let (($x216 (forall ((s_1 Int) (sk_x Int) )(let (($x33 (and (=> (= t_0 instr_NOP) (= t_1 instr_NOP)) (=> (= t_1 instr_NOP) (= t_2 instr_NOP)))))
 (let (($x115 (= u_2_2 u_2_1)))
 (let (($x117 (= u_1_2 u_1_1)))
 (let (($x119 (= u_0_2 u_0_1)))
 (let (($x120 (and $x119 $x117 $x115)))
 (let (($x184 (and (and (= x_0_2 x_0_1) (= x_1_2 x_1_1) (= x_2_2 x_2_1)) $x120)))
 (let (($x186 (=> (= instr_NOP t_1) $x184)))
 (let (($x136 (= u_2_2 u_1_1)))
 (let (($x137 (= u_1_2 u_0_1)))
 (let (($x138 (= u_0_2 true)))
 (let (($x139 (and $x138 $x137 $x136)))
 (let (($x140 (= x_2_2 x_1_1)))
 (let (($x146 (not u_2_1)))
 (let (($x178 (=> $x146 (and (and (= x_0_2 x_0_1) (= x_1_2 x_0_1)) (and $x140 $x139)))))
 (let (($x181 (=> (= instr_DUP t_1) (and u_0_1 $x178))))
 (let (($x151 (= u_2_2 u_3_1)))
 (let (($x152 (= u_1_2 u_2_1)))
 (let (($x153 (= u_0_2 u_1_1)))
 (let (($x154 (and $x153 $x152 $x151)))
 (let (($x170 (and (and (= x_0_2 x_1_1) (= x_1_2 x_2_1) (= x_2_2 x_3_1)) $x154)))
 (let (($x173 (=> (and (= instr_POP t_1) u_0_1) $x170)))
 (let (($x155 (and true $x154)))
 (let (($x197 (and (=> (and (= x_0_1 sk_x) (= x_1_1 1)) (= x_0_2 s_1)) $x155)))
 (let (($x164 (= instr_ADD t_1)))
 (let (($x147 (=> $x146 (and (= x_0_2 a_2) (and (and (= x_1_2 x_0_1) $x140) $x139)))))
 (let (($x149 (=> (and (= instr_PUSH t_1) $x146) (and (= x_0_2 a_2) (and (and (= x_1_2 x_0_1) $x140) $x139)))))
 (let (($x130 (=> (and u_0_1 u_1_1) (and (= x_0_2 x_1_1) (= x_1_2 x_0_1)))))
 (let (($x135 (=> (= instr_SWAP t_1) (and u_0_1 (=> u_1_1 (and $x130 (and (= x_2_2 x_2_1) $x120)))))))
 (let (($x201 (or $x135 $x149 (=> $x164 (and u_0_1 (=> u_1_1 $x197))) $x173 $x181 $x186)))
 (let (($x35 (= u_2_1 u_2_0)))
 (let (($x37 (= u_1_1 u_1_0)))
 (let (($x39 (= u_0_1 u_0_0)))
 (let (($x40 (and $x39 $x37 $x35)))
 (let (($x110 (and (and (= x_0_1 x_0_0) (= x_1_1 x_1_0) (= x_2_1 x_2_0)) $x40)))
 (let (($x112 (=> (= instr_NOP t_0) $x110)))
 (let (($x58 (= u_2_1 u_1_0)))
 (let (($x59 (= u_1_1 u_0_0)))
 (let (($x60 (= u_0_1 true)))
 (let (($x61 (and $x60 $x59 $x58)))
 (let (($x62 (= x_2_1 x_1_0)))
 (let (($x68 (not u_2_0)))
 (let (($x103 (=> $x68 (and (and (= x_0_1 x_0_0) (= x_1_1 x_0_0)) (and $x62 $x61)))))
 (let (($x107 (=> (= instr_DUP t_0) (and u_0_0 $x103))))
 (let (($x74 (= u_2_1 u_3_0)))
 (let (($x75 (= u_1_1 u_2_0)))
 (let (($x76 (= u_0_1 u_1_0)))
 (let (($x77 (and $x76 $x75 $x74)))
 (let (($x94 (and (and (= x_0_1 x_1_0) (= x_1_1 x_2_0) (= x_2_1 x_3_0)) $x77)))
 (let (($x98 (=> (and (= instr_POP t_0) u_0_0) $x94)))
 (let (($x78 (and true $x77)))
 (let (($x206 (and (=> (and (= x_0_0 sk_x) (= x_1_0 1)) (= x_0_1 s_1)) $x78)))
 (let (($x88 (= instr_ADD t_0)))
 (let (($x69 (=> $x68 (and (= x_0_1 a_1) (and (and (= x_1_1 x_0_0) $x62) $x61)))))
 (let (($x72 (=> (and (= instr_PUSH t_0) $x68) (and (= x_0_1 a_1) (and (and (= x_1_1 x_0_0) $x62) $x61)))))
 (let (($x51 (=> (and u_0_0 u_1_0) (and (= x_0_1 x_1_0) (= x_1_1 x_0_0)))))
 (let (($x57 (=> (= instr_SWAP t_0) (and u_0_0 (=> u_1_0 (and $x51 (and (= x_2_1 x_2_0) $x40)))))))
 (let (($x210 (or $x57 $x72 (=> $x88 (and u_0_0 (=> u_1_0 $x206))) $x98 $x107 $x112)))
 (and (and (= s_0 x_0_1) (= s_1 x_1_1)) (and (and $x210 $x201) $x33))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (and $x216 $x23))))
(check-sat)
